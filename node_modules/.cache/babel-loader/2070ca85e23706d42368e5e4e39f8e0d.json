{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgonzalez\\\\Documents\\\\Instalaci\\xF3n conectada\\\\web-cameras\\\\app-cameras-react-b\\\\src\\\\components\\\\HandleUpdateCamera.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import md5 from 'md5';\n// import * as $ from 'jquery';\n\nimport Cookies from 'universal-cookie';\nimport loadingSrc from \"../img/loading.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_SERVICES_IP\n} = process.env;\nconst cookies = new Cookies();\n\nclass HandleUpdateCamera extends Component {\n  constructor() {\n    super();\n\n    this.handleUpdate = () => {\n      const userID = cookies.get('userID');\n      const queryParams = new URLSearchParams(window.location.search);\n      const id = queryParams.get('idCamera');\n      const name = queryParams.get('nameCamera');\n      const cameraType = queryParams.get('cameraType');\n      const description = queryParams.get('descriptionCamera');\n      const panoramic = queryParams.get('select');\n      const interiorGTC = queryParams.get('Interior-GTC');\n      const exteriorGTC = queryParams.get('Exterior-GTC');\n      const offices = queryParams.get('Offices');\n      const dome = queryParams.get('Dome');\n      const corridor = queryParams.get('Corridor');\n      const others = queryParams.get('Others');\n      var setgroup = [];\n\n      if (interiorGTC) {\n        setgroup.push(interiorGTC);\n      }\n\n      if (exteriorGTC) {\n        setgroup.push(exteriorGTC);\n      }\n\n      if (offices) {\n        setgroup.push(offices);\n      }\n\n      if (dome) {\n        setgroup.push(dome);\n      }\n\n      if (corridor) {\n        setgroup.push(corridor);\n      }\n\n      if (others) {\n        setgroup.push(others);\n      }\n\n      const recordImagesStatus = queryParams.get('recordImages');\n      var recordStatus;\n\n      if (recordImagesStatus === 'on') {\n        recordStatus = true;\n      } else {\n        recordStatus = false;\n      }\n\n      const processImageStatus = queryParams.get('processImages');\n      var processStatus;\n\n      if (processImageStatus === 'on') {\n        processStatus = true;\n      } else {\n        processStatus = false;\n      } // var urlpath;\n      // const regexhttps        = /^https:\\/\\/+/;\n      // const regexhttp         = /^http:\\/\\/+/;\n\n\n      var url = queryParams.get('urlCamera'); // const credentialsCheck  = queryParams.get('credentialsCheck');\n\n      const user = queryParams.get('userCamera');\n      const pwd = queryParams.get('pwdCamera');\n      var password;\n\n      if (pwd) {\n        password = pwd;\n      } // const encryptPwd = md5(pwd);\n\n\n      const options = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'session-id': userID\n      };\n      const updateBody = {\n        \"id\": id,\n        \"name\": name,\n        \"cameraType\": cameraType,\n        \"panoramic\": panoramic,\n        \"group\": setgroup,\n        \"url\": url,\n        \"user\": user,\n        password,\n        \"kurentoConfig\": {\n          \"recorder\": recordStatus,\n          \"carDetection\": processStatus\n        },\n        \"description\": description\n      };\n      axios.patch(`http://${REACT_APP_SERVICES_IP}:8443/cameras`, updateBody, {\n        headers: options\n      }).then(response => {\n        this.setState({\n          //save the current state of the data\n          loadingUpdate: false\n        });\n        console.log('Camera updated successfully....');\n      }).catch(error => {\n        this.setState({\n          //save the current state of the data\n          connectionError: true\n        });\n        console.log('Error fetching and parsing data on the ORION context brocker', error);\n      });\n    };\n\n    this.state = {\n      loadingUpdate: true,\n      connectionError: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdate();\n  }\n\n  render() {\n    const error = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box message-box-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-ban fa-2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 52\n        }, this), \" Internal Server Error\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times fa-2x exit-button \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }, this);\n\n    const success = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box message-box-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check fa-2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Success:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 56\n        }, this), \" Camera updated correctly\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times fa-2x exit-button \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rep_prub_form\",\n      children: this.state.connectionError ? error : this.state.loadingUpdate ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading connection_error\",\n        src: loadingSrc,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 38\n      }, this) : success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HandleUpdateCamera;","map":{"version":3,"sources":["C:/Users/dgonzalez/Documents/Instalaci√≥n conectada/web-cameras/app-cameras-react-b/src/components/HandleUpdateCamera.js"],"names":["React","Component","axios","Cookies","REACT_APP_SERVICES_IP","process","env","cookies","HandleUpdateCamera","constructor","handleUpdate","userID","get","queryParams","URLSearchParams","window","location","search","id","name","cameraType","description","panoramic","interiorGTC","exteriorGTC","offices","dome","corridor","others","setgroup","push","recordImagesStatus","recordStatus","processImageStatus","processStatus","url","user","pwd","password","options","updateBody","patch","headers","then","response","setState","loadingUpdate","console","log","catch","error","connectionError","state","componentDidMount","render","success","loadingSrc"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport axios from 'axios';\n// import md5 from 'md5';\n// import * as $ from 'jquery';\nimport Cookies               from 'universal-cookie';\n\nimport loadingSrc from '../img/loading.svg';\n\nconst {REACT_APP_SERVICES_IP} = process.env;\nconst cookies = new Cookies();\n\nclass HandleUpdateCamera extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      loadingUpdate: true,\n      connectionError: false\n    };\n  }\n\n  handleUpdate = () => {\n    const userID      = cookies.get('userID');\n    const queryParams = new URLSearchParams(window.location.search);\n    const id          = queryParams.get('idCamera');\n    const name        = queryParams.get('nameCamera');\n    const cameraType  = queryParams.get('cameraType');\n    const description = queryParams.get('descriptionCamera');\n    const panoramic   = queryParams.get('select');\n\n\n    const interiorGTC = queryParams.get('Interior-GTC');\n    const exteriorGTC = queryParams.get('Exterior-GTC');\n    const offices     = queryParams.get('Offices');\n    const dome        = queryParams.get('Dome');\n    const corridor    = queryParams.get('Corridor');\n    const others      = queryParams.get('Others');\n\n    var setgroup      = [];\n    if (interiorGTC)  {setgroup.push(interiorGTC);}\n    if (exteriorGTC)  {setgroup.push(exteriorGTC);}\n    if (offices)      {setgroup.push(offices);}\n    if (dome)         {setgroup.push(dome);}\n    if (corridor)     {setgroup.push(corridor);}\n    if (others)       {setgroup.push(others);}\n\n\n\n\n    const recordImagesStatus = queryParams.get('recordImages');\n    var recordStatus;\n      if (recordImagesStatus === 'on') {\n        recordStatus = true;\n      }else {\n        recordStatus = false;\n      }\n\n    const processImageStatus = queryParams.get('processImages');\n    var processStatus;\n      if (processImageStatus === 'on') {\n        processStatus  = true;\n      }else {\n        processStatus  = false;\n      }\n\n\n    // var urlpath;\n    // const regexhttps        = /^https:\\/\\/+/;\n    // const regexhttp         = /^http:\\/\\/+/;\n\n    var url    = queryParams.get('urlCamera');\n    // const credentialsCheck  = queryParams.get('credentialsCheck');\n    const user = queryParams.get('userCamera');\n    const pwd  = queryParams.get('pwdCamera');\n\n      var password;\n      if (pwd) {\n        password =  pwd;\n      }\n      // const encryptPwd = md5(pwd);\n\n\n    const options = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'session-id': userID\n    };\n\n    const updateBody = {\n      \"id\": id,\n      \"name\": name,\n      \"cameraType\": cameraType,\n      \"panoramic\": panoramic,\n      \"group\": setgroup,\n      \"url\": url,\n      \"user\": user,\n      password,\n      \"kurentoConfig\": {\n          \"recorder\": recordStatus,\n          \"carDetection\": processStatus\n      },\n      \"description\": description\n    };\n\n    axios.patch(`http://${REACT_APP_SERVICES_IP}:8443/cameras`, updateBody, { headers: options\t})\n      .then(response => {\n        this.setState({ //save the current state of the data\n          loadingUpdate: false\n        });\n        console.log('Camera updated successfully....');\n      })\n      .catch(error => {\n        this.setState({ //save the current state of the data\n          connectionError: true\n        });\n        console.log('Error fetching and parsing data on the ORION context brocker', error);\n      });\n  }\n\n\n  componentDidMount() {\n    this.handleUpdate();\n  }\n\n\n  render() {\n    const error = <div className=\"message-box message-box-error\">\n                    <i className=\"fa fa-ban fa-2x\"></i>\n                    <span className=\"message-text\"><strong>Error:</strong> Internal Server Error</span>\n                    <a href=\"/\">\n                      <i className=\"fa fa-times fa-2x exit-button \"></i>\n                    </a>\n                  </div>;\n    const success = <div className=\"message-box message-box-success\">\n                        <i className=\"fa fa-check fa-2x\"></i>\n                        <span className=\"message-text\"><strong>Success:</strong> Camera updated correctly</span>\n                        <a href=\"/\">\n                          <i className=\"fa fa-times fa-2x exit-button \"></i>\n                        </a>\n                      </div>;\n    return (\n      <div className=\"rep_prub_form\">\n\n      { (this.state.connectionError) ? error :\n        (this.state.loadingUpdate) ? <img className=\"loading connection_error\" src={ loadingSrc } alt=\"loading\"/> : success }\n\n      </div>\n    );\n  }\n}\n\nexport default HandleUpdateCamera;\n"]},"metadata":{},"sourceType":"module"}