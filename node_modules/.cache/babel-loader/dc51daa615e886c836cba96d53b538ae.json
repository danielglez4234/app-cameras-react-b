{"ast":null,"code":"/*\n * (C) Copyright 2014-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar freeice = require('freeice');\n\nvar inherits = require('inherits');\n\nvar UAParser = require('ua-parser-js');\n\nvar uuidv4 = require('uuid/v4');\n\nvar hark = require('hark');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar recursive = require('merge').recursive.bind(undefined, true);\n\nvar sdpTranslator = require('sdp-translator');\n\nvar logger = typeof window === 'undefined' ? console : window.Logger || console;\n\ntry {\n  require('kurento-browser-extensions');\n} catch (error) {\n  if (typeof getScreenConstraints === 'undefined') {\n    logger.warn('screen sharing is not available');\n\n    getScreenConstraints = function getScreenConstraints(sendSource, callback) {\n      callback(new Error(\"This library is not enabled for screen sharing\"));\n    };\n  }\n}\n\nvar MEDIA_CONSTRAINTS = {\n  audio: true,\n  video: {\n    width: 640,\n    framerate: 15\n  }\n}; // Somehow, the UAParser constructor gets an empty window object.\n// We need to pass the user agent string in order to get information\n\nvar ua = typeof window !== 'undefined' && window.navigator ? window.navigator.userAgent : '';\nvar parser = new UAParser(ua);\nvar browser = parser.getBrowser();\n\nfunction insertScriptSrcInHtmlDom(scriptSrc) {\n  //Create a script tag\n  var script = document.createElement('script'); // Assign a URL to the script element\n\n  script.src = scriptSrc; // Get the first script tag on the page (we'll insert our new one before it)\n\n  var ref = document.querySelector('script'); // Insert the new node before the reference node\n\n  ref.parentNode.insertBefore(script, ref);\n}\n\nfunction importScriptsDependsOnBrowser() {\n  if (browser.name === 'IE') {\n    insertScriptSrcInHtmlDom(\"https://cdn.temasys.io/adapterjs/0.15.x/adapter.debug.js\");\n  }\n}\n\nimportScriptsDependsOnBrowser();\nvar usePlanB = false;\n\nif (browser.name === 'Chrome' || browser.name === 'Chromium') {\n  logger.debug(browser.name + \": using SDP PlanB\");\n  usePlanB = true;\n}\n\nfunction noop(error) {\n  if (error) logger.error(error);\n}\n\nfunction trackStop(track) {\n  track.stop && track.stop();\n}\n\nfunction streamStop(stream) {\n  stream.getTracks().forEach(trackStop);\n}\n/**\n * Returns a string representation of a SessionDescription object.\n */\n\n\nvar dumpSDP = function (description) {\n  if (typeof description === 'undefined' || description === null) {\n    return '';\n  }\n\n  return 'type: ' + description.type + '\\r\\n' + description.sdp;\n};\n\nfunction bufferizeCandidates(pc, onerror) {\n  var candidatesQueue = [];\n\n  function setSignalingstatechangeAccordingWwebBrowser(functionToExecute, pc) {\n    if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n      pc.onsignalingstatechange = functionToExecute;\n    } else {\n      pc.addEventListener('signalingstatechange', functionToExecute);\n    }\n  }\n\n  var signalingstatechangeFunction = function () {\n    if (pc.signalingState === 'stable') {\n      while (candidatesQueue.length) {\n        var entry = candidatesQueue.shift();\n        pc.addIceCandidate(entry.candidate, entry.callback, entry.callback);\n      }\n    }\n  };\n\n  setSignalingstatechangeAccordingWwebBrowser(signalingstatechangeFunction, pc);\n  return function (candidate, callback) {\n    callback = callback || onerror;\n\n    switch (pc.signalingState) {\n      case 'closed':\n        callback(new Error('PeerConnection object is closed'));\n        break;\n\n      case 'stable':\n        if (pc.remoteDescription) {\n          pc.addIceCandidate(candidate, callback, callback);\n          break;\n        }\n\n      default:\n        candidatesQueue.push({\n          candidate: candidate,\n          callback: callback\n        });\n    }\n  };\n}\n/* Simulcast utilities */\n\n\nfunction removeFIDFromOffer(sdp) {\n  var n = sdp.indexOf(\"a=ssrc-group:FID\");\n\n  if (n > 0) {\n    return sdp.slice(0, n);\n  } else {\n    return sdp;\n  }\n}\n\nfunction getSimulcastInfo(videoStream) {\n  var videoTracks = videoStream.getVideoTracks();\n\n  if (!videoTracks.length) {\n    logger.warn('No video tracks available in the video stream');\n    return '';\n  }\n\n  var lines = ['a=x-google-flag:conference', 'a=ssrc-group:SIM 1 2 3', 'a=ssrc:1 cname:localVideo', 'a=ssrc:1 msid:' + videoStream.id + ' ' + videoTracks[0].id, 'a=ssrc:1 mslabel:' + videoStream.id, 'a=ssrc:1 label:' + videoTracks[0].id, 'a=ssrc:2 cname:localVideo', 'a=ssrc:2 msid:' + videoStream.id + ' ' + videoTracks[0].id, 'a=ssrc:2 mslabel:' + videoStream.id, 'a=ssrc:2 label:' + videoTracks[0].id, 'a=ssrc:3 cname:localVideo', 'a=ssrc:3 msid:' + videoStream.id + ' ' + videoTracks[0].id, 'a=ssrc:3 mslabel:' + videoStream.id, 'a=ssrc:3 label:' + videoTracks[0].id];\n  lines.push('');\n  return lines.join('\\n');\n}\n\nfunction sleep(milliseconds) {\n  var start = new Date().getTime();\n\n  for (var i = 0; i < 1e7; i++) {\n    if (new Date().getTime() - start > milliseconds) {\n      break;\n    }\n  }\n}\n\nfunction setIceCandidateAccordingWebBrowser(functionToExecute, pc) {\n  if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n    pc.onicecandidate = functionToExecute;\n  } else {\n    pc.addEventListener('icecandidate', functionToExecute);\n  }\n}\n/**\n * Wrapper object of an RTCPeerConnection. This object is aimed to simplify the\n * development of WebRTC-based applications.\n *\n * @constructor module:kurentoUtils.WebRtcPeer\n *\n * @param {String} mode Mode in which the PeerConnection will be configured.\n *  Valid values are: 'recvonly', 'sendonly', and 'sendrecv'\n * @param localVideo Video tag for the local stream\n * @param remoteVideo Video tag for the remote stream\n * @param {MediaStream} videoStream Stream to be used as primary source\n *  (typically video and audio, or only video if combined with audioStream) for\n *  localVideo and to be added as stream to the RTCPeerConnection\n * @param {MediaStream} audioStream Stream to be used as second source\n *  (typically for audio) for localVideo and to be added as stream to the\n *  RTCPeerConnection\n */\n\n\nfunction WebRtcPeer(mode, options, callback) {\n  if (!(this instanceof WebRtcPeer)) {\n    return new WebRtcPeer(mode, options, callback);\n  }\n\n  WebRtcPeer.super_.call(this);\n\n  if (options instanceof Function) {\n    callback = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  callback = (callback || noop).bind(this);\n  var self = this;\n  var localVideo = options.localVideo;\n  var remoteVideo = options.remoteVideo;\n  var videoStream = options.videoStream;\n  var audioStream = options.audioStream;\n  var mediaConstraints = options.mediaConstraints;\n  var pc = options.peerConnection;\n  var sendSource = options.sendSource || 'webcam';\n  var dataChannelConfig = options.dataChannelConfig;\n  var useDataChannels = options.dataChannels || false;\n  var dataChannel;\n  var guid = uuidv4();\n  var configuration = recursive({\n    iceServers: freeice()\n  }, options.configuration);\n  var onicecandidate = options.onicecandidate;\n  if (onicecandidate) this.on('icecandidate', onicecandidate);\n  var oncandidategatheringdone = options.oncandidategatheringdone;\n\n  if (oncandidategatheringdone) {\n    this.on('candidategatheringdone', oncandidategatheringdone);\n  }\n\n  var simulcast = options.simulcast;\n  var multistream = options.multistream;\n  var interop = new sdpTranslator.Interop();\n  var candidatesQueueOut = [];\n  var candidategatheringdone = false;\n  Object.defineProperties(this, {\n    'peerConnection': {\n      get: function () {\n        return pc;\n      }\n    },\n    'id': {\n      value: options.id || guid,\n      writable: false\n    },\n    'remoteVideo': {\n      get: function () {\n        return remoteVideo;\n      }\n    },\n    'localVideo': {\n      get: function () {\n        return localVideo;\n      }\n    },\n    'dataChannel': {\n      get: function () {\n        return dataChannel;\n      }\n    },\n\n    /**\n     * @member {(external:ImageData|undefined)} currentFrame\n     */\n    'currentFrame': {\n      get: function () {\n        // [ToDo] Find solution when we have a remote stream but we didn't set\n        // a remoteVideo tag\n        if (!remoteVideo) return;\n        if (remoteVideo.readyState < remoteVideo.HAVE_CURRENT_DATA) throw new Error('No video stream data available');\n        var canvas = document.createElement('canvas');\n        canvas.width = remoteVideo.videoWidth;\n        canvas.height = remoteVideo.videoHeight;\n        canvas.getContext('2d').drawImage(remoteVideo, 0, 0);\n        return canvas;\n      }\n    }\n  }); // Init PeerConnection\n\n  if (!pc) {\n    pc = new RTCPeerConnection(configuration);\n\n    if (useDataChannels && !dataChannel) {\n      var dcId = 'WebRtcPeer-' + self.id;\n      var dcOptions = undefined;\n\n      if (dataChannelConfig) {\n        dcId = dataChannelConfig.id || dcId;\n        dcOptions = dataChannelConfig.options;\n      }\n\n      dataChannel = pc.createDataChannel(dcId, dcOptions);\n\n      if (dataChannelConfig) {\n        dataChannel.onopen = dataChannelConfig.onopen;\n        dataChannel.onclose = dataChannelConfig.onclose;\n        dataChannel.onmessage = dataChannelConfig.onmessage;\n        dataChannel.onbufferedamountlow = dataChannelConfig.onbufferedamountlow;\n        dataChannel.onerror = dataChannelConfig.onerror || noop;\n      }\n    }\n  } // Shims over the now deprecated getLocalStreams() and getRemoteStreams()\n  // (usage of these methods should be dropped altogether)\n\n\n  if (!pc.getLocalStreams && pc.getSenders) {\n    pc.getLocalStreams = function () {\n      var stream = new MediaStream();\n      pc.getSenders().forEach(function (sender) {\n        stream.addTrack(sender.track);\n      });\n      return [stream];\n    };\n  }\n\n  if (!pc.getRemoteStreams && pc.getReceivers) {\n    pc.getRemoteStreams = function () {\n      var stream = new MediaStream();\n      pc.getReceivers().forEach(function (sender) {\n        stream.addTrack(sender.track);\n      });\n      return [stream];\n    };\n  } // If event.candidate == null, it means that candidate gathering has finished\n  // and RTCPeerConnection.iceGatheringState == \"complete\".\n  // Such candidate does not need to be sent to the remote peer.\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event#Indicating_that_ICE_gathering_is_complete\n\n\n  var iceCandidateFunction = function (event) {\n    var candidate = event.candidate;\n\n    if (EventEmitter.listenerCount(self, 'icecandidate') || EventEmitter.listenerCount(self, 'candidategatheringdone')) {\n      if (candidate) {\n        var cand;\n\n        if (multistream && usePlanB) {\n          cand = interop.candidateToUnifiedPlan(candidate);\n        } else {\n          cand = candidate;\n        }\n\n        if (typeof AdapterJS === 'undefined') {\n          self.emit('icecandidate', cand);\n        }\n\n        candidategatheringdone = false;\n      } else if (!candidategatheringdone) {\n        if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n          EventEmitter.prototype.emit('candidategatheringdone', cand);\n        } else {\n          self.emit('candidategatheringdone');\n        }\n\n        candidategatheringdone = true;\n      }\n    } else if (!candidategatheringdone) {\n      candidatesQueueOut.push(candidate);\n      if (!candidate) candidategatheringdone = true;\n    }\n  };\n\n  setIceCandidateAccordingWebBrowser(iceCandidateFunction, pc);\n  pc.onaddstream = options.onaddstream;\n  pc.onnegotiationneeded = options.onnegotiationneeded;\n  this.on('newListener', function (event, listener) {\n    if (event === 'icecandidate' || event === 'candidategatheringdone') {\n      while (candidatesQueueOut.length) {\n        var candidate = candidatesQueueOut.shift();\n\n        if (!candidate === (event === 'candidategatheringdone')) {\n          listener(candidate);\n        }\n      }\n    }\n  });\n  var addIceCandidate = bufferizeCandidates(pc);\n  /**\n   * Callback function invoked when an ICE candidate is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.addIceCandidate\n   *\n   * @param iceCandidate - Literal object with the ICE candidate description\n   * @param callback - Called when the ICE candidate has been added.\n   */\n\n  this.addIceCandidate = function (iceCandidate, callback) {\n    var candidate;\n\n    if (multistream && usePlanB) {\n      candidate = interop.candidateToPlanB(iceCandidate);\n    } else {\n      candidate = new RTCIceCandidate(iceCandidate);\n    }\n\n    logger.debug('Remote ICE candidate received', iceCandidate);\n    callback = (callback || noop).bind(this);\n    addIceCandidate(candidate, callback);\n  };\n\n  this.generateOffer = function (callback) {\n    callback = callback.bind(this);\n\n    if (mode === 'recvonly') {\n      /* Add reception tracks on the RTCPeerConnection. Send tracks are\n       * unconditionally added to \"sendonly\" and \"sendrecv\" modes, in the\n       * constructor's \"start()\" method, but nothing is done for \"recvonly\".\n       *\n       * Here, we add new transceivers to receive audio and/or video, so the\n       * SDP Offer that will be generated by the PC includes these medias\n       * with the \"a=recvonly\" attribute.\n       */\n      var useAudio = mediaConstraints && typeof mediaConstraints.audio === 'boolean' ? mediaConstraints.audio : true;\n      var useVideo = mediaConstraints && typeof mediaConstraints.video === 'boolean' ? mediaConstraints.video : true;\n\n      if (useAudio) {\n        pc.addTransceiver('audio', {\n          direction: 'recvonly'\n        });\n      }\n\n      if (useVideo) {\n        pc.addTransceiver('video', {\n          direction: 'recvonly'\n        });\n      }\n    } else if (mode === 'sendonly') {\n      /* The constructor's \"start()\" method already added any available track,\n       * which by default creates Transceiver with \"sendrecv\" direction.\n       *\n       * Here, we set all transceivers to only send audio and/or video, so the\n       * SDP Offer that will be generated by the PC includes these medias\n       * with the \"a=sendonly\" attribute.\n       */\n      pc.getTransceivers().forEach(function (transceiver) {\n        transceiver.direction = \"sendonly\";\n      });\n    }\n\n    if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n      var setLocalDescriptionOnSuccess = function () {\n        sleep(1000);\n        var localDescription = pc.localDescription;\n        logger.debug('Local description set\\n', localDescription.sdp);\n\n        if (multistream && usePlanB) {\n          localDescription = interop.toUnifiedPlan(localDescription);\n          logger.debug('offer::origPlanB->UnifiedPlan', dumpSDP(localDescription));\n        }\n\n        callback(null, localDescription.sdp, self.processAnswer.bind(self));\n      };\n\n      var createOfferOnSuccess = function (offer) {\n        logger.debug('Created SDP offer');\n        logger.debug('Local description set\\n', pc.localDescription);\n        pc.setLocalDescription(offer, setLocalDescriptionOnSuccess, callback);\n      };\n\n      pc.createOffer(createOfferOnSuccess, callback);\n    } else {\n      pc.createOffer().then(function (offer) {\n        logger.debug('Created SDP offer');\n        offer = mangleSdpToAddSimulcast(offer);\n        return pc.setLocalDescription(offer);\n      }).then(function () {\n        var localDescription = pc.localDescription;\n        logger.debug('Local description set\\n', localDescription.sdp);\n\n        if (multistream && usePlanB) {\n          localDescription = interop.toUnifiedPlan(localDescription);\n          logger.debug('offer::origPlanB->UnifiedPlan', dumpSDP(localDescription));\n        }\n\n        callback(null, localDescription.sdp, self.processAnswer.bind(self));\n      }).catch(callback);\n    }\n  };\n\n  this.getLocalSessionDescriptor = function () {\n    return pc.localDescription;\n  };\n\n  this.getRemoteSessionDescriptor = function () {\n    return pc.remoteDescription;\n  };\n\n  function setRemoteVideo() {\n    if (remoteVideo) {\n      remoteVideo.pause();\n      var stream = pc.getRemoteStreams()[0];\n      remoteVideo.srcObject = stream;\n      logger.debug('Remote stream:', stream);\n\n      if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n        remoteVideo = attachMediaStream(remoteVideo, stream);\n      } else {\n        remoteVideo.load();\n      }\n    }\n  }\n\n  this.showLocalVideo = function () {\n    localVideo.srcObject = videoStream;\n    localVideo.muted = true;\n\n    if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n      localVideo = attachMediaStream(localVideo, videoStream);\n    }\n  };\n\n  this.send = function (data) {\n    if (dataChannel && dataChannel.readyState === 'open') {\n      dataChannel.send(data);\n    } else {\n      logger.warn('Trying to send data over a non-existing or closed data channel');\n    }\n  };\n  /**\n   * Callback function invoked when a SDP answer is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.processAnswer\n   *\n   * @param sdpAnswer - Description of sdpAnswer\n   * @param callback -\n   *            Invoked after the SDP answer is processed, or there is an error.\n   */\n\n\n  this.processAnswer = function (sdpAnswer, callback) {\n    callback = (callback || noop).bind(this);\n    var answer = new RTCSessionDescription({\n      type: 'answer',\n      sdp: sdpAnswer\n    });\n\n    if (multistream && usePlanB) {\n      var planBAnswer = interop.toPlanB(answer);\n      logger.debug('asnwer::planB', dumpSDP(planBAnswer));\n      answer = planBAnswer;\n    }\n\n    logger.debug('SDP answer received, setting remote description');\n\n    if (pc.signalingState === 'closed') {\n      return callback('PeerConnection is closed');\n    }\n\n    pc.setRemoteDescription(answer).then(function () {\n      setRemoteVideo();\n      callback();\n    }, callback);\n  };\n  /**\n   * Callback function invoked when a SDP offer is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.processOffer\n   *\n   * @param sdpOffer - Description of sdpOffer\n   * @param callback - Called when the remote description has been set\n   *  successfully.\n   */\n\n\n  this.processOffer = function (sdpOffer, callback) {\n    callback = callback.bind(this);\n    var offer = new RTCSessionDescription({\n      type: 'offer',\n      sdp: sdpOffer\n    });\n\n    if (multistream && usePlanB) {\n      var planBOffer = interop.toPlanB(offer);\n      logger.debug('offer::planB', dumpSDP(planBOffer));\n      offer = planBOffer;\n    }\n\n    logger.debug('SDP offer received, setting remote description');\n\n    if (pc.signalingState === 'closed') {\n      return callback('PeerConnection is closed');\n    }\n\n    pc.setRemoteDescription(offer).then(function () {\n      return setRemoteVideo();\n    }).then(function () {\n      return pc.createAnswer();\n    }).then(function (answer) {\n      answer = mangleSdpToAddSimulcast(answer);\n      logger.debug('Created SDP answer');\n      return pc.setLocalDescription(answer);\n    }).then(function () {\n      var localDescription = pc.localDescription;\n\n      if (multistream && usePlanB) {\n        localDescription = interop.toUnifiedPlan(localDescription);\n        logger.debug('answer::origPlanB->UnifiedPlan', dumpSDP(localDescription));\n      }\n\n      logger.debug('Local description set\\n', localDescription.sdp);\n      callback(null, localDescription.sdp);\n    }).catch(callback);\n  };\n\n  function mangleSdpToAddSimulcast(answer) {\n    if (simulcast) {\n      if (browser.name === 'Chrome' || browser.name === 'Chromium') {\n        logger.debug('Adding multicast info');\n        answer = new RTCSessionDescription({\n          'type': answer.type,\n          'sdp': removeFIDFromOffer(answer.sdp) + getSimulcastInfo(videoStream)\n        });\n      } else {\n        logger.warn('Simulcast is only available in Chrome browser.');\n      }\n    }\n\n    return answer;\n  }\n  /**\n   * This function creates the RTCPeerConnection object taking into account the\n   * properties received in the constructor. It starts the SDP negotiation\n   * process: generates the SDP offer and invokes the onsdpoffer callback. This\n   * callback is expected to send the SDP offer, in order to obtain an SDP\n   * answer from another peer.\n   */\n\n\n  function start() {\n    if (pc.signalingState === 'closed') {\n      callback('The peer connection object is in \"closed\" state. This is most likely due to an invocation of the dispose method before accepting in the dialogue');\n    }\n\n    if (videoStream && localVideo) {\n      self.showLocalVideo();\n    }\n\n    if (videoStream) {\n      videoStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, videoStream);\n      });\n    }\n\n    if (audioStream) {\n      audioStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, audioStream);\n      });\n    }\n\n    callback();\n  }\n\n  if (mode !== 'recvonly' && !videoStream && !audioStream) {\n    function getMedia(constraints) {\n      if (constraints === undefined) {\n        constraints = MEDIA_CONSTRAINTS;\n      }\n\n      if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n        navigator.getUserMedia(constraints, function (stream) {\n          videoStream = stream;\n          start();\n        }, callback);\n      } else {\n        navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n          videoStream = stream;\n          start();\n        }).catch(callback);\n      }\n    }\n\n    if (sendSource === 'webcam') {\n      getMedia(mediaConstraints);\n    } else {\n      getScreenConstraints(sendSource, function (error, constraints_) {\n        if (error) return callback(error);\n        constraints = [mediaConstraints];\n        constraints.unshift(constraints_);\n        getMedia(recursive.apply(undefined, constraints));\n      }, guid);\n    }\n  } else {\n    setTimeout(start, 0);\n  }\n\n  this.on('_dispose', function () {\n    if (localVideo) {\n      localVideo.pause();\n      localVideo.srcObject = null;\n\n      if (typeof AdapterJS === 'undefined') {\n        localVideo.load();\n      }\n\n      localVideo.muted = false;\n    }\n\n    if (remoteVideo) {\n      remoteVideo.pause();\n      remoteVideo.srcObject = null;\n\n      if (typeof AdapterJS === 'undefined') {\n        remoteVideo.load();\n      }\n    }\n\n    self.removeAllListeners();\n\n    if (typeof window !== 'undefined' && window.cancelChooseDesktopMedia !== undefined) {\n      window.cancelChooseDesktopMedia(guid);\n    }\n  });\n}\n\ninherits(WebRtcPeer, EventEmitter);\n\nfunction createEnableDescriptor(type) {\n  var method = 'get' + type + 'Tracks';\n  return {\n    enumerable: true,\n    get: function () {\n      // [ToDo] Should return undefined if not all tracks have the same value?\n      if (!this.peerConnection) return;\n      var streams = this.peerConnection.getLocalStreams();\n      if (!streams.length) return;\n\n      for (var i = 0, stream; stream = streams[i]; i++) {\n        var tracks = stream[method]();\n\n        for (var j = 0, track; track = tracks[j]; j++) if (!track.enabled) return false;\n      }\n\n      return true;\n    },\n    set: function (value) {\n      function trackSetEnable(track) {\n        track.enabled = value;\n      }\n\n      this.peerConnection.getLocalStreams().forEach(function (stream) {\n        stream[method]().forEach(trackSetEnable);\n      });\n    }\n  };\n}\n\nObject.defineProperties(WebRtcPeer.prototype, {\n  'enabled': {\n    enumerable: true,\n    get: function () {\n      return this.audioEnabled && this.videoEnabled;\n    },\n    set: function (value) {\n      this.audioEnabled = this.videoEnabled = value;\n    }\n  },\n  'audioEnabled': createEnableDescriptor('Audio'),\n  'videoEnabled': createEnableDescriptor('Video')\n});\n\nWebRtcPeer.prototype.getLocalStream = function (index) {\n  if (this.peerConnection) {\n    return this.peerConnection.getLocalStreams()[index || 0];\n  }\n};\n\nWebRtcPeer.prototype.getRemoteStream = function (index) {\n  if (this.peerConnection) {\n    return this.peerConnection.getRemoteStreams()[index || 0];\n  }\n};\n/**\n * @description This method frees the resources used by WebRtcPeer.\n *\n * @function module:kurentoUtils.WebRtcPeer.prototype.dispose\n */\n\n\nWebRtcPeer.prototype.dispose = function () {\n  logger.debug('Disposing WebRtcPeer');\n  var pc = this.peerConnection;\n  var dc = this.dataChannel;\n\n  try {\n    if (dc) {\n      if (dc.readyState === 'closed') return;\n      dc.close();\n    }\n\n    if (pc) {\n      if (pc.signalingState === 'closed') return;\n      pc.getLocalStreams().forEach(streamStop); // FIXME This is not yet implemented in firefox\n      // if(videoStream) pc.removeStream(videoStream);\n      // if(audioStream) pc.removeStream(audioStream);\n\n      pc.close();\n    }\n  } catch (err) {\n    logger.warn('Exception disposing webrtc peer ' + err);\n  }\n\n  if (typeof AdapterJS === 'undefined') {\n    this.emit('_dispose');\n  }\n}; //\n// Specialized child classes\n//\n\n\nfunction WebRtcPeerRecvonly(options, callback) {\n  if (!(this instanceof WebRtcPeerRecvonly)) {\n    return new WebRtcPeerRecvonly(options, callback);\n  }\n\n  WebRtcPeerRecvonly.super_.call(this, 'recvonly', options, callback);\n}\n\ninherits(WebRtcPeerRecvonly, WebRtcPeer);\n\nfunction WebRtcPeerSendonly(options, callback) {\n  if (!(this instanceof WebRtcPeerSendonly)) {\n    return new WebRtcPeerSendonly(options, callback);\n  }\n\n  WebRtcPeerSendonly.super_.call(this, 'sendonly', options, callback);\n}\n\ninherits(WebRtcPeerSendonly, WebRtcPeer);\n\nfunction WebRtcPeerSendrecv(options, callback) {\n  if (!(this instanceof WebRtcPeerSendrecv)) {\n    return new WebRtcPeerSendrecv(options, callback);\n  }\n\n  WebRtcPeerSendrecv.super_.call(this, 'sendrecv', options, callback);\n}\n\ninherits(WebRtcPeerSendrecv, WebRtcPeer);\n\nfunction harkUtils(stream, options) {\n  return hark(stream, options);\n}\n\nexports.bufferizeCandidates = bufferizeCandidates;\nexports.WebRtcPeerRecvonly = WebRtcPeerRecvonly;\nexports.WebRtcPeerSendonly = WebRtcPeerSendonly;\nexports.WebRtcPeerSendrecv = WebRtcPeerSendrecv;\nexports.hark = harkUtils;","map":{"version":3,"sources":["C:/Users/dgonzalez/Documents/Instalación conectada/web-cameras/app-cameras-react-b/node_modules/kurento-utils/lib/WebRtcPeer.js"],"names":["freeice","require","inherits","UAParser","uuidv4","hark","EventEmitter","recursive","bind","undefined","sdpTranslator","logger","window","console","Logger","error","getScreenConstraints","warn","sendSource","callback","Error","MEDIA_CONSTRAINTS","audio","video","width","framerate","ua","navigator","userAgent","parser","browser","getBrowser","insertScriptSrcInHtmlDom","scriptSrc","script","document","createElement","src","ref","querySelector","parentNode","insertBefore","importScriptsDependsOnBrowser","name","usePlanB","debug","noop","trackStop","track","stop","streamStop","stream","getTracks","forEach","dumpSDP","description","type","sdp","bufferizeCandidates","pc","onerror","candidatesQueue","setSignalingstatechangeAccordingWwebBrowser","functionToExecute","AdapterJS","webrtcDetectedBrowser","webrtcDetectedVersion","onsignalingstatechange","addEventListener","signalingstatechangeFunction","signalingState","length","entry","shift","addIceCandidate","candidate","remoteDescription","push","removeFIDFromOffer","n","indexOf","slice","getSimulcastInfo","videoStream","videoTracks","getVideoTracks","lines","id","join","sleep","milliseconds","start","Date","getTime","i","setIceCandidateAccordingWebBrowser","onicecandidate","WebRtcPeer","mode","options","super_","call","Function","self","localVideo","remoteVideo","audioStream","mediaConstraints","peerConnection","dataChannelConfig","useDataChannels","dataChannels","dataChannel","guid","configuration","iceServers","on","oncandidategatheringdone","simulcast","multistream","interop","Interop","candidatesQueueOut","candidategatheringdone","Object","defineProperties","get","value","writable","readyState","HAVE_CURRENT_DATA","canvas","videoWidth","height","videoHeight","getContext","drawImage","RTCPeerConnection","dcId","dcOptions","createDataChannel","onopen","onclose","onmessage","onbufferedamountlow","getLocalStreams","getSenders","MediaStream","sender","addTrack","getRemoteStreams","getReceivers","iceCandidateFunction","event","listenerCount","cand","candidateToUnifiedPlan","emit","prototype","onaddstream","onnegotiationneeded","listener","iceCandidate","candidateToPlanB","RTCIceCandidate","generateOffer","useAudio","useVideo","addTransceiver","direction","getTransceivers","transceiver","setLocalDescriptionOnSuccess","localDescription","toUnifiedPlan","processAnswer","createOfferOnSuccess","offer","setLocalDescription","createOffer","then","mangleSdpToAddSimulcast","catch","getLocalSessionDescriptor","getRemoteSessionDescriptor","setRemoteVideo","pause","srcObject","attachMediaStream","load","showLocalVideo","muted","send","data","sdpAnswer","answer","RTCSessionDescription","planBAnswer","toPlanB","setRemoteDescription","processOffer","sdpOffer","planBOffer","createAnswer","getMedia","constraints","getUserMedia","mediaDevices","constraints_","unshift","apply","setTimeout","removeAllListeners","cancelChooseDesktopMedia","createEnableDescriptor","method","enumerable","streams","tracks","j","enabled","set","trackSetEnable","audioEnabled","videoEnabled","getLocalStream","index","getRemoteStream","dispose","dc","close","err","WebRtcPeerRecvonly","WebRtcPeerSendonly","WebRtcPeerSendrecv","harkUtils","exports"],"mappings":"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","sourcesContent":["/*\n * (C) Copyright 2014-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar freeice = require('freeice')\nvar inherits = require('inherits')\nvar UAParser = require('ua-parser-js')\nvar uuidv4 = require('uuid/v4')\nvar hark = require('hark')\n\nvar EventEmitter = require('events').EventEmitter\nvar recursive = require('merge').recursive.bind(undefined, true)\nvar sdpTranslator = require('sdp-translator')\nvar logger = (typeof window === 'undefined') ? console : window.Logger ||\n  console\n\ntry {\n  require('kurento-browser-extensions')\n} catch (error) {\n  if (typeof getScreenConstraints === 'undefined') {\n    logger.warn('screen sharing is not available')\n\n    getScreenConstraints = function getScreenConstraints(sendSource, callback) {\n      callback(new Error(\"This library is not enabled for screen sharing\"))\n    }\n  }\n}\n\nvar MEDIA_CONSTRAINTS = {\n  audio: true,\n  video: {\n    width: 640,\n    framerate: 15\n  }\n}\n\n// Somehow, the UAParser constructor gets an empty window object.\n// We need to pass the user agent string in order to get information\nvar ua = (typeof window !== 'undefined' && window.navigator) ? window.navigator\n  .userAgent : ''\nvar parser = new UAParser(ua)\nvar browser = parser.getBrowser()\n\nfunction insertScriptSrcInHtmlDom(scriptSrc) {\n  //Create a script tag\n  var script = document.createElement('script');\n  // Assign a URL to the script element\n  script.src = scriptSrc;\n  // Get the first script tag on the page (we'll insert our new one before it)\n  var ref = document.querySelector('script');\n  // Insert the new node before the reference node\n  ref.parentNode.insertBefore(script, ref);\n}\n\nfunction importScriptsDependsOnBrowser() {\n  if (browser.name === 'IE') {\n    insertScriptSrcInHtmlDom(\n      \"https://cdn.temasys.io/adapterjs/0.15.x/adapter.debug.js\");\n  }\n}\n\nimportScriptsDependsOnBrowser();\nvar usePlanB = false\nif (browser.name === 'Chrome' || browser.name === 'Chromium') {\n  logger.debug(browser.name + \": using SDP PlanB\")\n  usePlanB = true\n}\n\nfunction noop(error) {\n  if (error) logger.error(error)\n}\n\nfunction trackStop(track) {\n  track.stop && track.stop()\n}\n\nfunction streamStop(stream) {\n  stream.getTracks().forEach(trackStop)\n}\n\n/**\n * Returns a string representation of a SessionDescription object.\n */\nvar dumpSDP = function (description) {\n  if (typeof description === 'undefined' || description === null) {\n    return ''\n  }\n\n  return 'type: ' + description.type + '\\r\\n' + description.sdp\n}\n\nfunction bufferizeCandidates(pc, onerror) {\n  var candidatesQueue = []\n\n  function setSignalingstatechangeAccordingWwebBrowser(functionToExecute, pc) {\n    if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser ===\n      'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n      pc.onsignalingstatechange = functionToExecute;\n    } else {\n      pc.addEventListener('signalingstatechange', functionToExecute);\n    }\n\n  }\n\n  var signalingstatechangeFunction = function () {\n    if (pc.signalingState === 'stable') {\n      while (candidatesQueue.length) {\n        var entry = candidatesQueue.shift();\n        pc.addIceCandidate(entry.candidate, entry.callback, entry.callback);\n      }\n    }\n  };\n\n  setSignalingstatechangeAccordingWwebBrowser(signalingstatechangeFunction, pc);\n  return function (candidate, callback) {\n    callback = callback || onerror;\n    switch (pc.signalingState) {\n    case 'closed':\n      callback(new Error('PeerConnection object is closed'));\n      break;\n    case 'stable':\n      if (pc.remoteDescription) {\n        pc.addIceCandidate(candidate, callback, callback);\n        break;\n\n      }\n      default:\n        candidatesQueue.push({\n          candidate: candidate,\n          callback: callback\n\n        });\n    }\n  };\n}\n\n/* Simulcast utilities */\n\nfunction removeFIDFromOffer(sdp) {\n  var n = sdp.indexOf(\"a=ssrc-group:FID\");\n\n  if (n > 0) {\n    return sdp.slice(0, n);\n  } else {\n    return sdp;\n  }\n}\n\nfunction getSimulcastInfo(videoStream) {\n  var videoTracks = videoStream.getVideoTracks();\n  if (!videoTracks.length) {\n    logger.warn('No video tracks available in the video stream')\n    return ''\n  }\n  var lines = [\n    'a=x-google-flag:conference',\n    'a=ssrc-group:SIM 1 2 3',\n    'a=ssrc:1 cname:localVideo',\n    'a=ssrc:1 msid:' + videoStream.id + ' ' + videoTracks[0].id,\n    'a=ssrc:1 mslabel:' + videoStream.id,\n    'a=ssrc:1 label:' + videoTracks[0].id,\n    'a=ssrc:2 cname:localVideo',\n    'a=ssrc:2 msid:' + videoStream.id + ' ' + videoTracks[0].id,\n    'a=ssrc:2 mslabel:' + videoStream.id,\n    'a=ssrc:2 label:' + videoTracks[0].id,\n    'a=ssrc:3 cname:localVideo',\n    'a=ssrc:3 msid:' + videoStream.id + ' ' + videoTracks[0].id,\n    'a=ssrc:3 mslabel:' + videoStream.id,\n    'a=ssrc:3 label:' + videoTracks[0].id\n  ];\n\n  lines.push('');\n\n  return lines.join('\\n');\n}\n\nfunction sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i < 1e7; i++) {\n    if ((new Date().getTime() - start) > milliseconds) {\n      break;\n    }\n  }\n}\n\nfunction setIceCandidateAccordingWebBrowser(functionToExecute, pc) {\n  if (typeof AdapterJS !== 'undefined' && AdapterJS.webrtcDetectedBrowser ===\n    'IE' && AdapterJS.webrtcDetectedVersion >= 9) {\n    pc.onicecandidate = functionToExecute;\n  } else {\n    pc.addEventListener('icecandidate', functionToExecute);\n  }\n\n}\n\n/**\n * Wrapper object of an RTCPeerConnection. This object is aimed to simplify the\n * development of WebRTC-based applications.\n *\n * @constructor module:kurentoUtils.WebRtcPeer\n *\n * @param {String} mode Mode in which the PeerConnection will be configured.\n *  Valid values are: 'recvonly', 'sendonly', and 'sendrecv'\n * @param localVideo Video tag for the local stream\n * @param remoteVideo Video tag for the remote stream\n * @param {MediaStream} videoStream Stream to be used as primary source\n *  (typically video and audio, or only video if combined with audioStream) for\n *  localVideo and to be added as stream to the RTCPeerConnection\n * @param {MediaStream} audioStream Stream to be used as second source\n *  (typically for audio) for localVideo and to be added as stream to the\n *  RTCPeerConnection\n */\nfunction WebRtcPeer(mode, options, callback) {\n  if (!(this instanceof WebRtcPeer)) {\n    return new WebRtcPeer(mode, options, callback)\n  }\n\n  WebRtcPeer.super_.call(this)\n\n  if (options instanceof Function) {\n    callback = options\n    options = undefined\n  }\n\n  options = options || {}\n  callback = (callback || noop).bind(this)\n\n  var self = this\n  var localVideo = options.localVideo\n  var remoteVideo = options.remoteVideo\n  var videoStream = options.videoStream\n  var audioStream = options.audioStream\n  var mediaConstraints = options.mediaConstraints\n\n  var pc = options.peerConnection\n  var sendSource = options.sendSource || 'webcam'\n\n  var dataChannelConfig = options.dataChannelConfig\n  var useDataChannels = options.dataChannels || false\n  var dataChannel\n\n  var guid = uuidv4()\n  var configuration = recursive({\n      iceServers: freeice()\n    },\n    options.configuration)\n\n  var onicecandidate = options.onicecandidate\n  if (onicecandidate) this.on('icecandidate', onicecandidate)\n\n  var oncandidategatheringdone = options.oncandidategatheringdone\n  if (oncandidategatheringdone) {\n    this.on('candidategatheringdone', oncandidategatheringdone)\n  }\n\n  var simulcast = options.simulcast\n  var multistream = options.multistream\n  var interop = new sdpTranslator.Interop()\n  var candidatesQueueOut = []\n  var candidategatheringdone = false\n\n  Object.defineProperties(this, {\n    'peerConnection': {\n      get: function () {\n        return pc\n      }\n    },\n\n    'id': {\n      value: options.id || guid,\n      writable: false\n    },\n\n    'remoteVideo': {\n      get: function () {\n        return remoteVideo\n      }\n    },\n\n    'localVideo': {\n      get: function () {\n        return localVideo\n      }\n    },\n\n    'dataChannel': {\n      get: function () {\n        return dataChannel\n      }\n    },\n\n    /**\n     * @member {(external:ImageData|undefined)} currentFrame\n     */\n    'currentFrame': {\n      get: function () {\n        // [ToDo] Find solution when we have a remote stream but we didn't set\n        // a remoteVideo tag\n        if (!remoteVideo) return;\n\n        if (remoteVideo.readyState < remoteVideo.HAVE_CURRENT_DATA)\n          throw new Error('No video stream data available')\n\n        var canvas = document.createElement('canvas')\n        canvas.width = remoteVideo.videoWidth\n        canvas.height = remoteVideo.videoHeight\n\n        canvas.getContext('2d').drawImage(remoteVideo, 0, 0)\n\n        return canvas\n      }\n    }\n  })\n\n  // Init PeerConnection\n  if (!pc) {\n    pc = new RTCPeerConnection(configuration);\n    if (useDataChannels && !dataChannel) {\n      var dcId = 'WebRtcPeer-' + self.id\n      var dcOptions = undefined\n      if (dataChannelConfig) {\n        dcId = dataChannelConfig.id || dcId\n        dcOptions = dataChannelConfig.options\n      }\n      dataChannel = pc.createDataChannel(dcId, dcOptions);\n      if (dataChannelConfig) {\n        dataChannel.onopen = dataChannelConfig.onopen;\n        dataChannel.onclose = dataChannelConfig.onclose;\n        dataChannel.onmessage = dataChannelConfig.onmessage;\n        dataChannel.onbufferedamountlow = dataChannelConfig.onbufferedamountlow;\n        dataChannel.onerror = dataChannelConfig.onerror || noop;\n      }\n    }\n  }\n\n  // Shims over the now deprecated getLocalStreams() and getRemoteStreams()\n  // (usage of these methods should be dropped altogether)\n  if (!pc.getLocalStreams && pc.getSenders) {\n    pc.getLocalStreams = function () {\n      var stream = new MediaStream();\n      pc.getSenders().forEach(function (sender) {\n        stream.addTrack(sender.track);\n      });\n      return [stream];\n    };\n  }\n  if (!pc.getRemoteStreams && pc.getReceivers) {\n    pc.getRemoteStreams = function () {\n      var stream = new MediaStream();\n      pc.getReceivers().forEach(function (sender) {\n        stream.addTrack(sender.track);\n      });\n      return [stream];\n    };\n  }\n\n  // If event.candidate == null, it means that candidate gathering has finished\n  // and RTCPeerConnection.iceGatheringState == \"complete\".\n  // Such candidate does not need to be sent to the remote peer.\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event#Indicating_that_ICE_gathering_is_complete\n  var iceCandidateFunction = function (event) {\n    var candidate = event.candidate;\n    if (EventEmitter.listenerCount(self, 'icecandidate') || EventEmitter\n      .listenerCount(self, 'candidategatheringdone')) {\n      if (candidate) {\n        var cand;\n        if (multistream && usePlanB) {\n          cand = interop.candidateToUnifiedPlan(candidate);\n        } else {\n          cand = candidate;\n        }\n        if (typeof AdapterJS === 'undefined') {\n          self.emit('icecandidate', cand);\n\n        }\n        candidategatheringdone = false;\n      } else if (!candidategatheringdone) {\n        if (typeof AdapterJS !== 'undefined' && AdapterJS\n          .webrtcDetectedBrowser === 'IE' && AdapterJS\n          .webrtcDetectedVersion >= 9) {\n          EventEmitter.prototype.emit('candidategatheringdone', cand);\n        } else {\n          self.emit('candidategatheringdone');\n        }\n        candidategatheringdone = true;\n      }\n    } else if (!candidategatheringdone) {\n      candidatesQueueOut.push(candidate);\n      if (!candidate)\n        candidategatheringdone = true;\n\n    }\n  };\n\n  setIceCandidateAccordingWebBrowser(iceCandidateFunction, pc);\n  pc.onaddstream = options.onaddstream\n  pc.onnegotiationneeded = options.onnegotiationneeded\n  this.on('newListener', function (event, listener) {\n    if (event === 'icecandidate' || event === 'candidategatheringdone') {\n      while (candidatesQueueOut.length) {\n        var candidate = candidatesQueueOut.shift()\n\n        if (!candidate === (event === 'candidategatheringdone')) {\n          listener(candidate)\n        }\n      }\n    }\n  })\n\n  var addIceCandidate = bufferizeCandidates(pc)\n\n  /**\n   * Callback function invoked when an ICE candidate is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.addIceCandidate\n   *\n   * @param iceCandidate - Literal object with the ICE candidate description\n   * @param callback - Called when the ICE candidate has been added.\n   */\n  this.addIceCandidate = function (iceCandidate, callback) {\n    var candidate\n\n    if (multistream && usePlanB) {\n      candidate = interop.candidateToPlanB(iceCandidate)\n    } else {\n      candidate = new RTCIceCandidate(iceCandidate)\n    }\n\n    logger.debug('Remote ICE candidate received', iceCandidate)\n    callback = (callback || noop).bind(this)\n    addIceCandidate(candidate, callback)\n  }\n\n  this.generateOffer = function (callback) {\n    callback = callback.bind(this)\n\n    if (mode === 'recvonly') {\n      /* Add reception tracks on the RTCPeerConnection. Send tracks are\n       * unconditionally added to \"sendonly\" and \"sendrecv\" modes, in the\n       * constructor's \"start()\" method, but nothing is done for \"recvonly\".\n       *\n       * Here, we add new transceivers to receive audio and/or video, so the\n       * SDP Offer that will be generated by the PC includes these medias\n       * with the \"a=recvonly\" attribute.\n       */\n      var useAudio =\n        (mediaConstraints && typeof mediaConstraints.audio === 'boolean') ?\n        mediaConstraints.audio : true\n      var useVideo =\n        (mediaConstraints && typeof mediaConstraints.video === 'boolean') ?\n        mediaConstraints.video : true\n\n      if (useAudio) {\n        pc.addTransceiver('audio', {\n          direction: 'recvonly'\n        });\n      }\n\n      if (useVideo) {\n        pc.addTransceiver('video', {\n          direction: 'recvonly'\n        });\n      }\n    } else if (mode === 'sendonly') {\n      /* The constructor's \"start()\" method already added any available track,\n       * which by default creates Transceiver with \"sendrecv\" direction.\n       *\n       * Here, we set all transceivers to only send audio and/or video, so the\n       * SDP Offer that will be generated by the PC includes these medias\n       * with the \"a=sendonly\" attribute.\n       */\n      pc.getTransceivers().forEach(function (transceiver) {\n        transceiver.direction = \"sendonly\";\n      });\n    }\n\n    if (typeof AdapterJS !== 'undefined' && AdapterJS\n      .webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9\n    ) {\n      var setLocalDescriptionOnSuccess = function () {\n        sleep(1000);\n        var localDescription = pc.localDescription;\n        logger.debug('Local description set\\n', localDescription.sdp);\n        if (multistream && usePlanB) {\n          localDescription = interop.toUnifiedPlan(localDescription);\n          logger.debug('offer::origPlanB->UnifiedPlan', dumpSDP(\n            localDescription));\n        }\n        callback(null, localDescription.sdp, self.processAnswer.bind(self));\n      };\n      var createOfferOnSuccess = function (offer) {\n        logger.debug('Created SDP offer');\n        logger.debug('Local description set\\n', pc.localDescription);\n        pc.setLocalDescription(offer, setLocalDescriptionOnSuccess,\n          callback);\n      };\n      pc.createOffer(createOfferOnSuccess, callback);\n    } else {\n      pc.createOffer()\n        .then(function (offer) {\n          logger.debug('Created SDP offer');\n          offer = mangleSdpToAddSimulcast(offer);\n          return pc.setLocalDescription(offer);\n        })\n        .then(function () {\n          var localDescription = pc.localDescription;\n          logger.debug('Local description set\\n', localDescription.sdp);\n          if (multistream && usePlanB) {\n            localDescription = interop.toUnifiedPlan(localDescription);\n            logger.debug('offer::origPlanB->UnifiedPlan', dumpSDP(\n              localDescription));\n          }\n          callback(null, localDescription.sdp, self.processAnswer.bind(\n            self));\n        })\n        .catch(callback);\n    }\n  }\n\n  this.getLocalSessionDescriptor = function () {\n    return pc.localDescription\n  }\n\n  this.getRemoteSessionDescriptor = function () {\n    return pc.remoteDescription\n  }\n\n  function setRemoteVideo() {\n    if (remoteVideo) {\n      remoteVideo.pause()\n\n      var stream = pc.getRemoteStreams()[0]\n      remoteVideo.srcObject = stream\n      logger.debug('Remote stream:', stream)\n\n      if (typeof AdapterJS !== 'undefined' && AdapterJS\n        .webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9\n      ) {\n        remoteVideo = attachMediaStream(remoteVideo, stream);\n      } else {\n        remoteVideo.load();\n      }\n    }\n  }\n\n  this.showLocalVideo = function () {\n    localVideo.srcObject = videoStream\n    localVideo.muted = true\n\n    if (typeof AdapterJS !== 'undefined' && AdapterJS\n      .webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9\n    ) {\n      localVideo = attachMediaStream(localVideo, videoStream);\n    }\n  };\n  this.send = function (data) {\n    if (dataChannel && dataChannel.readyState === 'open') {\n      dataChannel.send(data)\n    } else {\n      logger.warn(\n        'Trying to send data over a non-existing or closed data channel')\n    }\n  }\n\n  /**\n   * Callback function invoked when a SDP answer is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.processAnswer\n   *\n   * @param sdpAnswer - Description of sdpAnswer\n   * @param callback -\n   *            Invoked after the SDP answer is processed, or there is an error.\n   */\n  this.processAnswer = function (sdpAnswer, callback) {\n    callback = (callback || noop).bind(this)\n\n    var answer = new RTCSessionDescription({\n      type: 'answer',\n      sdp: sdpAnswer\n    })\n\n    if (multistream && usePlanB) {\n      var planBAnswer = interop.toPlanB(answer)\n      logger.debug('asnwer::planB', dumpSDP(planBAnswer))\n      answer = planBAnswer\n    }\n\n    logger.debug('SDP answer received, setting remote description')\n\n    if (pc.signalingState === 'closed') {\n      return callback('PeerConnection is closed')\n    }\n\n    pc.setRemoteDescription(answer).then(function () {\n        setRemoteVideo()\n\n        callback()\n      },\n      callback)\n  }\n\n  /**\n   * Callback function invoked when a SDP offer is received. Developers are\n   * expected to invoke this function in order to complete the SDP negotiation.\n   *\n   * @function module:kurentoUtils.WebRtcPeer.prototype.processOffer\n   *\n   * @param sdpOffer - Description of sdpOffer\n   * @param callback - Called when the remote description has been set\n   *  successfully.\n   */\n  this.processOffer = function (sdpOffer, callback) {\n    callback = callback.bind(this)\n\n    var offer = new RTCSessionDescription({\n      type: 'offer',\n      sdp: sdpOffer\n    })\n\n    if (multistream && usePlanB) {\n      var planBOffer = interop.toPlanB(offer)\n      logger.debug('offer::planB', dumpSDP(planBOffer))\n      offer = planBOffer\n    }\n\n    logger.debug('SDP offer received, setting remote description')\n\n    if (pc.signalingState === 'closed') {\n      return callback('PeerConnection is closed')\n    }\n\n    pc.setRemoteDescription(offer).then(function () {\n      return setRemoteVideo()\n    }).then(function () {\n      return pc.createAnswer()\n    }).then(function (answer) {\n      answer = mangleSdpToAddSimulcast(answer)\n      logger.debug('Created SDP answer')\n      return pc.setLocalDescription(answer)\n    }).then(function () {\n      var localDescription = pc.localDescription\n      if (multistream && usePlanB) {\n        localDescription = interop.toUnifiedPlan(localDescription)\n        logger.debug('answer::origPlanB->UnifiedPlan', dumpSDP(\n          localDescription))\n      }\n      logger.debug('Local description set\\n', localDescription.sdp)\n      callback(null, localDescription.sdp)\n    }).catch(callback)\n  }\n\n  function mangleSdpToAddSimulcast(answer) {\n    if (simulcast) {\n      if (browser.name === 'Chrome' || browser.name === 'Chromium') {\n        logger.debug('Adding multicast info')\n        answer = new RTCSessionDescription({\n          'type': answer.type,\n          'sdp': removeFIDFromOffer(answer.sdp) + getSimulcastInfo(\n            videoStream)\n        })\n      } else {\n        logger.warn('Simulcast is only available in Chrome browser.')\n      }\n    }\n\n    return answer\n  }\n\n  /**\n   * This function creates the RTCPeerConnection object taking into account the\n   * properties received in the constructor. It starts the SDP negotiation\n   * process: generates the SDP offer and invokes the onsdpoffer callback. This\n   * callback is expected to send the SDP offer, in order to obtain an SDP\n   * answer from another peer.\n   */\n  function start() {\n    if (pc.signalingState === 'closed') {\n      callback(\n        'The peer connection object is in \"closed\" state. This is most likely due to an invocation of the dispose method before accepting in the dialogue'\n      )\n    }\n\n    if (videoStream && localVideo) {\n      self.showLocalVideo()\n    }\n\n    if (videoStream) {\n      videoStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, videoStream);\n      });\n    }\n\n    if (audioStream) {\n      audioStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, audioStream);\n      });\n    }\n\n    callback()\n  }\n\n  if (mode !== 'recvonly' && !videoStream && !audioStream) {\n    function getMedia(constraints) {\n      if (constraints === undefined) {\n        constraints = MEDIA_CONSTRAINTS\n      }\n      if (typeof AdapterJS !== 'undefined' && AdapterJS\n        .webrtcDetectedBrowser === 'IE' && AdapterJS.webrtcDetectedVersion >= 9\n      ) {\n        navigator.getUserMedia(constraints, function (stream) {\n          videoStream = stream;\n          start();\n        }, callback);\n      } else {\n        navigator.mediaDevices.getUserMedia(constraints).then(function (\n          stream) {\n          videoStream = stream;\n\n          start();\n        }).catch(callback);\n      }\n    }\n    if (sendSource === 'webcam') {\n      getMedia(mediaConstraints)\n    } else {\n      getScreenConstraints(sendSource, function (error, constraints_) {\n        if (error)\n          return callback(error)\n\n        constraints = [mediaConstraints]\n        constraints.unshift(constraints_)\n        getMedia(recursive.apply(undefined, constraints))\n      }, guid)\n    }\n  } else {\n    setTimeout(start, 0)\n  }\n\n  this.on('_dispose', function () {\n    if (localVideo) {\n      localVideo.pause();\n      localVideo.srcObject = null;\n\n      if (typeof AdapterJS === 'undefined') {\n        localVideo.load();\n      }\n      localVideo.muted = false;\n\n    }\n    if (remoteVideo) {\n      remoteVideo.pause();\n      remoteVideo.srcObject = null;\n      if (typeof AdapterJS === 'undefined') {\n        remoteVideo.load();\n\n      }\n    }\n    self.removeAllListeners();\n\n    if (typeof window !== 'undefined' && window.cancelChooseDesktopMedia !==\n      undefined) {\n      window.cancelChooseDesktopMedia(guid)\n    }\n  })\n}\ninherits(WebRtcPeer, EventEmitter)\n\nfunction createEnableDescriptor(type) {\n  var method = 'get' + type + 'Tracks'\n\n  return {\n    enumerable: true,\n    get: function () {\n      // [ToDo] Should return undefined if not all tracks have the same value?\n\n      if (!this.peerConnection) return\n\n      var streams = this.peerConnection.getLocalStreams()\n      if (!streams.length) return\n\n      for (var i = 0, stream; stream = streams[i]; i++) {\n        var tracks = stream[method]()\n        for (var j = 0, track; track = tracks[j]; j++)\n          if (!track.enabled) return false\n      }\n\n      return true\n    },\n    set: function (value) {\n      function trackSetEnable(track) {\n        track.enabled = value\n      }\n\n      this.peerConnection.getLocalStreams().forEach(function (stream) {\n        stream[method]().forEach(trackSetEnable)\n      })\n    }\n  }\n}\n\nObject.defineProperties(WebRtcPeer.prototype, {\n  'enabled': {\n    enumerable: true,\n    get: function () {\n      return this.audioEnabled && this.videoEnabled\n    },\n    set: function (value) {\n      this.audioEnabled = this.videoEnabled = value\n    }\n  },\n  'audioEnabled': createEnableDescriptor('Audio'),\n  'videoEnabled': createEnableDescriptor('Video')\n})\n\nWebRtcPeer.prototype.getLocalStream = function (index) {\n  if (this.peerConnection) {\n    return this.peerConnection.getLocalStreams()[index || 0]\n  }\n}\n\nWebRtcPeer.prototype.getRemoteStream = function (index) {\n  if (this.peerConnection) {\n    return this.peerConnection.getRemoteStreams()[index || 0]\n  }\n}\n\n/**\n * @description This method frees the resources used by WebRtcPeer.\n *\n * @function module:kurentoUtils.WebRtcPeer.prototype.dispose\n */\nWebRtcPeer.prototype.dispose = function () {\n  logger.debug('Disposing WebRtcPeer')\n\n  var pc = this.peerConnection\n  var dc = this.dataChannel\n  try {\n    if (dc) {\n      if (dc.readyState === 'closed') return\n\n      dc.close()\n    }\n\n    if (pc) {\n      if (pc.signalingState === 'closed') return\n\n      pc.getLocalStreams().forEach(streamStop)\n\n      // FIXME This is not yet implemented in firefox\n      // if(videoStream) pc.removeStream(videoStream);\n      // if(audioStream) pc.removeStream(audioStream);\n\n      pc.close()\n    }\n  } catch (err) {\n    logger.warn('Exception disposing webrtc peer ' + err)\n  }\n\n  if (typeof AdapterJS === 'undefined') {\n    this.emit('_dispose');\n  }\n\n}\n\n//\n// Specialized child classes\n//\n\nfunction WebRtcPeerRecvonly(options, callback) {\n  if (!(this instanceof WebRtcPeerRecvonly)) {\n    return new WebRtcPeerRecvonly(options, callback)\n  }\n\n  WebRtcPeerRecvonly.super_.call(this, 'recvonly', options, callback)\n}\ninherits(WebRtcPeerRecvonly, WebRtcPeer)\n\nfunction WebRtcPeerSendonly(options, callback) {\n  if (!(this instanceof WebRtcPeerSendonly)) {\n    return new WebRtcPeerSendonly(options, callback)\n  }\n\n  WebRtcPeerSendonly.super_.call(this, 'sendonly', options, callback)\n}\ninherits(WebRtcPeerSendonly, WebRtcPeer)\n\nfunction WebRtcPeerSendrecv(options, callback) {\n  if (!(this instanceof WebRtcPeerSendrecv)) {\n    return new WebRtcPeerSendrecv(options, callback)\n  }\n\n  WebRtcPeerSendrecv.super_.call(this, 'sendrecv', options, callback)\n}\ninherits(WebRtcPeerSendrecv, WebRtcPeer)\n\nfunction harkUtils(stream, options) {\n  return hark(stream, options);\n}\n\nexports.bufferizeCandidates = bufferizeCandidates\n\nexports.WebRtcPeerRecvonly = WebRtcPeerRecvonly\nexports.WebRtcPeerSendonly = WebRtcPeerSendonly\nexports.WebRtcPeerSendrecv = WebRtcPeerSendrecv\nexports.hark = harkUtils\n"]},"metadata":{},"sourceType":"script"}