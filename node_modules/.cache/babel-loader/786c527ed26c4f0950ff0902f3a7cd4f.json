{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgonzalez\\\\Documents\\\\Instalaci\\xF3n conectada\\\\web-cameras\\\\app-cameras-react-b\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport kurentoUtils from 'kurento-utils';\nimport { Provider } from './components/context';\nimport axios from 'axios';\nimport * as $ from 'jquery';\nimport { uuid } from 'uuidv4';\nimport Cookies from 'universal-cookie';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport loadingSrc from \"./img/loading.svg\";\nimport loadingLogIn from \"./img/loading-login.svg\";\nimport apiNotResponding from './img/apiNotResponding.png'; // import './css/style.css';\n\nimport Test from './components/Test';\nimport Nav from './components/Nav';\nimport ContainerVideo from './components/ContainerVideo';\nimport PageNotFound from './components/PageNotFound';\nimport ConnectionError from './components/ConnectionError';\nimport UpdateCamera from './components/UpdateCamera';\nimport CreateCamera from './components/CreateCamera';\nimport HandleAddCamera from './components/HandleAddCamera';\nimport HandleUpdateCamera from './components/HandleUpdateCamera';\nimport HandleDeleteCamera from './components/HandleDeleteCamera'; // import AccumulateNotifications from './components/AccumulateNotifications';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_SERVICES_IP,\n  REACT_APP_TURN_USERNAME,\n  REACT_APP_TURN_PASSWORD\n} = process.env;\nvar connection = new WebSocket(`ws://${REACT_APP_SERVICES_IP}:8443/kurento`);\nconst mapKms = new Map();\nconst cookies = new Cookies();\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.resetSessionId = () => {\n      cookies.set('userID', \"\", {\n        path: '/'\n      });\n    };\n\n    this.sendMessage = message => {\n      var jsonMessage = JSON.stringify(message);\n\n      if (this.state.connection == null) {\n        console.log('Connection is null');\n      } else {\n        this.state.connection.send(jsonMessage);\n      }\n    };\n\n    this.connect = () => {\n      var _this = this;\n\n      console.log(\"----Sesion Id----> \" + cookies.get('userID'));\n      axios.get(`http://${REACT_APP_SERVICES_IP}:8443/cameras`, {\n        headers: {\n          'session-id': cookies.get('userID')\n        }\n      }).then(response => {\n        let sessionAlive = response.headers['session-alive'];\n\n        if (sessionAlive !== 'null') {\n          this.setState({\n            loggedIn: true,\n            sessionAlive: true\n          });\n        } else {\n          this.resetSessionId();\n          this.setState({\n            loggedIn: false,\n            sessionAlive: false\n          });\n        }\n\n        this.setState({\n          idCam: response.data,\n          loading: false,\n          sessionAlive: sessionAlive\n        });\n        var checkExists = setInterval(function () {\n          if (_this.state.idCam.length > 0) {\n            var videoReady = true;\n\n            for (var i = 0; i < _this.state.idCam.length; i++) {\n              if (!videoReady || !$(_this.state.idCam[i].id)) {\n                videoReady = false;\n              }\n            }\n\n            if (videoReady) {\n              var idCameras = _this.state.idCam;\n\n              for (var x = 0; x < idCameras.length; x++) {\n                const camera = idCameras[x];\n                const options = {\n                  remoteVideo: document.getElementById(camera.id),\n                  onicecandidate: _this.onIceCandidate,\n                  configuration: {\n                    iceServers: [_this.state.data.stun, _this.state.data.turn]\n                  }\n                };\n                mapKms.set(camera.id, new kurentoUtils.WebRtcPeer.WebRtcPeerRecvonly(options, function (error) {\n                  if (error) {\n                    return console.error(error);\n                  }\n\n                  this.generateOffer(function (error, offerSdp) {\n                    if (error) return console.error(error);\n                    var message = {\n                      id: 'sdpOffer',\n                      idCam: camera.id,\n                      sdpOffer: offerSdp\n                    };\n\n                    _this.sendMessage(message);\n                  });\n                }));\n              }\n\n              clearInterval(checkExists);\n            }\n          }\n        }, 1000);\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n        this.resetSessionId();\n        this.setState({\n          //save the current state of the data\n          apiRestConnectioError: true\n        });\n      });\n    };\n\n    this.onIceCandidate = candidate => {\n      var message = {\n        id: 'onIceCandidate',\n        candidate: candidate\n      };\n      this.sendMessage(message);\n    };\n\n    this.startVisualice = message => {\n      console.log(\"SDP answer received from server. Processing ...\");\n      mapKms.get(message.idCam).processAnswer(message.sdpAnswer, function (error) {\n        if (error) return console.error(error);\n      });\n    };\n\n    this.handleHideLogInArea = () => {\n      $('.logIn-cont').fadeOut(100);\n      $('.logIn-AreaClose').fadeOut(100);\n      $('.userName').val(\"\");\n      $('.password').val(\"\");\n      $('.contein_error_message').remove();\n    };\n\n    this.checkOnSubmitLogIn = () => {\n      const user = $('.userName').val();\n      const password = $('.password').val();\n\n      if (user === \"\" || password === \"\") {\n        this.handleErrorMessages(true, 'logIn-cont', 'Error: The username or password can not be empty');\n      } else {\n        $('.loading-logIn').removeClass('display-none');\n        $('.contein_error_message').remove();\n        cookies.set('userID', uuid(), {\n          path: '/'\n        });\n        let userID = cookies.get('userID');\n        let body = {\n          username: user,\n          password: password\n        };\n        const options = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'session-id': userID\n        };\n        axios.post(`http://${REACT_APP_SERVICES_IP}:8443/users/login`, body, {\n          headers: options\n        }).then(response => {\n          this.setState({\n            //save the current state of the data\n            loggedIn: response.data,\n            loading: true\n          });\n          console.log(JSON.stringify(response));\n          this.connect();\n          $('.loading-logIn').addClass('display-none');\n\n          if (response.data) {\n            $('.logIn-cont').fadeOut(100);\n            $('.logIn-AreaClose').fadeOut(100);\n            this.handleErrorMessages(false);\n          } else {\n            this.resetSessionId();\n            this.handleErrorMessages(true, 'logIn-cont', 'Error: The username or password are incorrect');\n          }\n        }).catch(error => {\n          this.resetSessionId();\n          $('.loading-logIn').addClass('display-none');\n          this.handleErrorMessages(true, 'logIn-cont', 'Error: The Sever is not responding');\n          console.log(\"ERROR:\" + error);\n        });\n      }\n    };\n\n    this.logOut = () => {\n      this.resetSessionId();\n      this.connect();\n      console.log(\"--- LOGOUT ---\");\n    };\n\n    this.handleErrorMessages = (view, appendTo, message) => {\n      let errorMessage = $(\"<div class='contein_error_message margin-top-15px'><div class='error_message'>\" + message + \"</div></div>\");\n\n      if (view) {\n        $(\".\" + appendTo).remove(errorMessage);\n        $(\".\" + appendTo).append(errorMessage);\n      } else {\n        $(\".\" + appendTo).hide(errorMessage);\n      }\n    };\n\n    this.state = {\n      loggedIn: false,\n      sessionAlive: false,\n      connection: connection,\n      idCam: [],\n      loading: true,\n      connectionError: false,\n      apiRestConnectioError: false,\n      data: {\n        count: 0,\n        kms: [],\n        stun: {\n          \"urls\": `stun:${REACT_APP_SERVICES_IP}:3478`\n        },\n        turn: {\n          \"urls\": `turn:${REACT_APP_SERVICES_IP}:3478`,\n          \"username\": REACT_APP_TURN_USERNAME,\n          \"credential\": REACT_APP_TURN_PASSWORD\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (cookies.get('userID') === \"\") {\n      this.setState({\n        loggedIn: false\n      });\n    } else {\n      this.setState({\n        loggedIn: true\n      });\n    }\n\n    const _this = this; // console.log(this.state.data.stun);\n\n\n    console.log(\"Starting connection to WebSocket Server\");\n    var start_vis = this;\n\n    this.state.connection.onmessage = function (event) {\n      // console.info('Received message: ' + event);\n      var parsedMessage = JSON.parse(event.data);\n\n      switch (parsedMessage.id) {\n        case 'sdpAnswer':\n          start_vis.startVisualice(parsedMessage);\n          break;\n\n        case 'error':\n          //onError(\"Error message from server: \" + parsedMessage.message);\n          break;\n\n        case 'stop':\n          //stop();\n          break;\n\n        case 'iceCandidate':\n          mapKms.get(parsedMessage.idCam).addIceCandidate(parsedMessage.candidate, function (error) {\n            if (error) {\n              console.error(\"Error adding candidate: \" + error);\n              return;\n            }\n          });\n          break;\n\n        default: //onError('Unrecognized message', parsedMessage);\n\n      }\n    };\n\n    this.state.connection.onopen = function (event) {\n      _this.connect();\n\n      console.log(\"Successfully connected to the websocket server...\");\n    };\n\n    this.state.connection.onerror = function (event) {\n      _this.setState({\n        //save the current state of the data\n        connectionError: true\n      });\n\n      _this.resetSessionId();\n\n      console.log(\"Failed to connect to the websocket server...\");\n    };\n  }\n\n  /*\n   * Disconnect when the componet is Unmount\n   */\n  componentWillUnmount() {\n    if (this.state.connection != null) {\n      this.state.connection.close();\n      console.log(\"Disconnected...\");\n    }\n  }\n  /*----------------------------------------------------------------------------------------------------------------------------------*/\n\n  /*\n   * Hide the Login PopUp when clicked outside\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      value: {\n        logOut: this.logOut,\n        loggedIn: this.state.loggedIn,\n        idCam: this.state.idCam,\n        loading: this.state.loading,\n        connectionError: this.state.connectionError,\n        apiRestConnectioError: this.state.apiRestConnectioError\n      },\n      children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => this.state.connectionError ? /*#__PURE__*/_jsxDEV(ConnectionError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 46\n            }, this) : this.state.apiRestConnectioError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-cameras-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rep_prub_cont\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"loading connection_error\",\n                  src: apiNotResponding,\n                  alt: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message_connection_error api_error\",\n                  children: \"APi REST server is not responding...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this) : this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-cameras-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rep_prub_cont\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"loading connection_error\",\n                  src: loadingSrc,\n                  alt: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(ContainerVideo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/list\",\n            render: () => this.state.connectionError ? /*#__PURE__*/_jsxDEV(ConnectionError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 46\n            }, this) : this.state.apiRestConnectioError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-cameras-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rep_prub_cont\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"loading connection_error\",\n                  src: apiNotResponding,\n                  alt: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message_connection_error api_error\",\n                  children: \"APi REST server is not responding...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this) : this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-cameras-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rep_prub_cont\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"loading connection_error\",\n                  src: loadingSrc,\n                  alt: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(ContainerVideo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), this.state.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"display-flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/create\",\n              render: () => /*#__PURE__*/_jsxDEV(CreateCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/update\",\n              render: () => /*#__PURE__*/_jsxDEV(UpdateCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add\",\n              render: () => /*#__PURE__*/_jsxDEV(HandleAddCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/selectedCamera\",\n              render: () => /*#__PURE__*/_jsxDEV(HandleUpdateCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/delete\",\n              render: () => /*#__PURE__*/_jsxDEV(HandleDeleteCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 19\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Route, {\n            component: PageNotFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logIn-cont display-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-logIn\",\n          children: \"This LogIn is only for administrators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"inputs-logIn userName\",\n          placeholder: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"inputs-logIn password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.checkOnSubmitLogIn();\n          },\n          className: \"button-form-logIn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loading-logIn display-none\",\n          src: loadingLogIn,\n          alt: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          this.handleHideLogInArea();\n        },\n        className: \"logIn-AreaClose display-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dgonzalez/Documents/Instalación conectada/web-cameras/app-cameras-react-b/src/App.js"],"names":["React","Component","kurentoUtils","Provider","axios","$","uuid","Cookies","BrowserRouter","Route","Switch","apiNotResponding","Test","Nav","ContainerVideo","PageNotFound","ConnectionError","UpdateCamera","CreateCamera","HandleAddCamera","HandleUpdateCamera","HandleDeleteCamera","REACT_APP_SERVICES_IP","REACT_APP_TURN_USERNAME","REACT_APP_TURN_PASSWORD","process","env","connection","WebSocket","mapKms","Map","cookies","App","constructor","resetSessionId","set","path","sendMessage","message","jsonMessage","JSON","stringify","state","console","log","send","connect","_this","get","headers","then","response","sessionAlive","setState","loggedIn","idCam","data","loading","checkExists","setInterval","length","videoReady","i","id","idCameras","x","camera","options","remoteVideo","document","getElementById","onicecandidate","onIceCandidate","configuration","iceServers","stun","turn","WebRtcPeer","WebRtcPeerRecvonly","error","generateOffer","offerSdp","sdpOffer","clearInterval","catch","apiRestConnectioError","candidate","startVisualice","processAnswer","sdpAnswer","handleHideLogInArea","fadeOut","val","remove","checkOnSubmitLogIn","user","password","handleErrorMessages","removeClass","userID","body","username","post","addClass","logOut","view","appendTo","errorMessage","append","hide","connectionError","count","kms","componentDidMount","start_vis","onmessage","event","parsedMessage","parse","addIceCandidate","onopen","onerror","componentWillUnmount","close","render","loadingSrc","loadingLogIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport kurentoUtils         from 'kurento-utils';\nimport { Provider }         from './components/context';\nimport axios                from 'axios';\nimport * as $               from 'jquery';\n\nimport { uuid }              from 'uuidv4';\nimport Cookies               from 'universal-cookie';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport loadingSrc          from './img/loading.svg';\nimport loadingLogIn        from './img/loading-login.svg';\nimport apiNotResponding    from './img/apiNotResponding.png';\n// import './css/style.css';\n\nimport Test from './components/Test';\n\nimport Nav                 from './components/Nav';\nimport ContainerVideo      from './components/ContainerVideo';\nimport PageNotFound        from './components/PageNotFound';\nimport ConnectionError     from './components/ConnectionError';\nimport UpdateCamera        from './components/UpdateCamera';\nimport CreateCamera        from './components/CreateCamera';\nimport HandleAddCamera     from './components/HandleAddCamera';\nimport HandleUpdateCamera  from './components/HandleUpdateCamera';\nimport HandleDeleteCamera  from './components/HandleDeleteCamera';\n// import AccumulateNotifications from './components/AccumulateNotifications';\n\nconst {REACT_APP_SERVICES_IP, REACT_APP_TURN_USERNAME, REACT_APP_TURN_PASSWORD} = process.env;\n\nvar connection  = new WebSocket(`ws://${REACT_APP_SERVICES_IP}:8443/kurento`);\nconst mapKms    = new Map();\nconst cookies   = new Cookies();\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      sessionAlive: false,\n      connection: connection,\n      idCam: [],\n      loading: true,\n      connectionError: false,\n      apiRestConnectioError: false,\n      data: {\n          count: 0,\n          kms : [],\n          stun : {\n            \"urls\" : `stun:${REACT_APP_SERVICES_IP}:3478`\n          },\n          turn : {\n            \"urls\" : `turn:${REACT_APP_SERVICES_IP}:3478`,\n            \"username\" : REACT_APP_TURN_USERNAME,\n            \"credential\" : REACT_APP_TURN_PASSWORD\n          }\n      }\n    };\n  }\n\n\n  resetSessionId = () => {\n    cookies.set('userID', \"\", { path: '/' });\n  }\n\n\n  componentDidMount() {\n\n    if (cookies.get('userID') === \"\") {\n      this.setState({ loggedIn: false });\n    }else {\n      this.setState({ loggedIn: true });\n    }\n\n\n    const _this = this;\n    // console.log(this.state.data.stun);\n    console.log(\"Starting connection to WebSocket Server\")\n    var start_vis = this;\n    this.state.connection.onmessage = function(event){\n\n      // console.info('Received message: ' + event);\n      var parsedMessage = JSON.parse(event.data);\n\n      switch (parsedMessage.id) {\n      case 'sdpAnswer':\n        start_vis.startVisualice(parsedMessage);\n        break;\n      case 'error':\n        //onError(\"Error message from server: \" + parsedMessage.message);\n        break;\n      case 'stop':\n        //stop();\n        break;\n      case 'iceCandidate':\n        mapKms.get(parsedMessage.idCam).addIceCandidate(parsedMessage.candidate, function (error) {\n              if (error) {\n              console.error(\"Error adding candidate: \" + error);\n              return;\n              }\n          });\n          break;\n      default:\n        //onError('Unrecognized message', parsedMessage);\n      }\n    }\n\n    this.state.connection.onopen = function(event) {\n      _this.connect();\n      console.log(\"Successfully connected to the websocket server...\")\n    }\n    this.state.connection.onerror = function(event) {\n      _this.setState({ //save the current state of the data\n        connectionError: true\n      });\n      _this.resetSessionId();\n      console.log(\"Failed to connect to the websocket server...\");\n    }\n\n  }\n\n\n\n\n  sendMessage = (message) => {\n    var jsonMessage = JSON.stringify(message);\n    if (this.state.connection == null) {\n      console.log('Connection is null');\n    } else {\n      this.state.connection.send(jsonMessage);\n    }\n  }\n\n  /*\n   * Get connection to /cameras\n   */\n  connect = () => {\n    var _this = this;\n\n    console.log(\"----Sesion Id----> \" + cookies.get('userID'))\n\n      axios.get(`http://${REACT_APP_SERVICES_IP}:8443/cameras`,{ headers: {'session-id': cookies.get('userID')} })\n      .then(response => {\n\n        let sessionAlive = response.headers['session-alive'];\n\n        if (sessionAlive !== 'null') {\n          this.setState({\n            loggedIn: true,\n            sessionAlive: true\n          });\n        }else {\n          this.resetSessionId();\n          this.setState({\n            loggedIn: false,\n            sessionAlive: false\n          });\n        }\n\n        this.setState({\n          idCam: response.data,\n          loading: false,\n          sessionAlive: sessionAlive\n        });\n\n\n        var checkExists= setInterval(function () {\n\n          if (_this.state.idCam.length > 0) {\n            var videoReady = true;\n            for (var i = 0; i < _this.state.idCam.length; i++) {\n              if (!videoReady || !$(_this.state.idCam[i].id)) {\n                videoReady = false;\n              }\n            }\n            if (videoReady) {\n\n              var idCameras = _this.state.idCam;\n\n                for (var x = 0; x < idCameras.length; x++) {\n\n                  const camera = idCameras[x];\n\n                  const options = {\n                    remoteVideo:     document.getElementById(camera.id),\n                    onicecandidate:  _this.onIceCandidate,\n                    configuration :  { iceServers: [_this.state.data.stun, _this.state.data.turn]}\n                  }\n\n                  mapKms.set(camera.id , new kurentoUtils.WebRtcPeer.WebRtcPeerRecvonly(options,  function (error) {\n\n                    if(error) {\n                      return console.error(error);\n                    }\n\n                    this.generateOffer (function (error, offerSdp) {\n                      if (error) return console.error (error);\n\n                      var message = {\n                        id : 'sdpOffer',\n                        idCam : camera.id,\n                        sdpOffer : offerSdp\n                      }\n                      _this.sendMessage(message);\n                    });\n                  })\n                );\n              }\n              clearInterval(checkExists);\n        }\n      }\n\n    }, 1000);\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n        this.resetSessionId();\n        this.setState({ //save the current state of the data\n          apiRestConnectioError: true\n        });\n      });\n  }\n\n  /*\n   * Stablish on IceCandidate\n   */\n  onIceCandidate = (candidate) => {\n    var message = {\n      id: 'onIceCandidate',\n      candidate: candidate\n    };\n    this.sendMessage(message);\n  }\n\n  /*\n   * Get the id of the camera to startVisualice\n   */\n  startVisualice = (message) => {\n    console.log(\"SDP answer received from server. Processing ...\");\n    mapKms.get(message.idCam).processAnswer (message.sdpAnswer, function (error) {\n      if (error) return console.error (error);\n    });\n  }\n\n  /*\n   * Disconnect when the componet is Unmount\n   */\n  componentWillUnmount(){\n    if (this.state.connection != null) {\n      this.state.connection.close();\n      console.log(\"Disconnected...\");\n    }\n  }\n\n/*----------------------------------------------------------------------------------------------------------------------------------*/\n\n/*\n * Hide the Login PopUp when clicked outside\n */\n  handleHideLogInArea = () => {\n    $('.logIn-cont').fadeOut(100);\n    $('.logIn-AreaClose').fadeOut(100);\n    $('.userName').val(\"\");\n    $('.password').val(\"\");\n    $('.contein_error_message').remove();\n  }\n\n\n  /*\n   * Check for administrator credentials - post with the user data to /users/login\n   */\n  checkOnSubmitLogIn = () =>{\n    const user     = $('.userName').val();\n    const password = $('.password').val();\n\n    if (user === \"\" || password === \"\") {\n      this.handleErrorMessages(true, 'logIn-cont', 'Error: The username or password can not be empty');\n\n    }else {\n      $('.loading-logIn').removeClass('display-none');\n      $('.contein_error_message').remove();\n\n      cookies.set('userID', uuid(), { path: '/' });\n      let userID = cookies.get('userID');\n\n      let body = {\n        username: user,\n        password: password\n      }\n\n      const options = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'session-id': userID\n      };\n\n      axios.post(`http://${REACT_APP_SERVICES_IP}:8443/users/login`, body, { headers: options })\n      .then(response => {\n\n        this.setState({ //save the current state of the data\n          loggedIn: response.data,\n          loading: true,\n        });\n\n        console.log(JSON.stringify(response));\n        this.connect();\n\n        $('.loading-logIn').addClass('display-none');\n\n        if (response.data)\n        {\n          $('.logIn-cont').fadeOut(100);\n          $('.logIn-AreaClose').fadeOut(100);\n          this.handleErrorMessages(false);\n        }\n        else\n        {\n          this.resetSessionId();\n          this.handleErrorMessages(true, 'logIn-cont', 'Error: The username or password are incorrect');\n        }\n      })\n      .catch(error => {\n        this.resetSessionId();\n        $('.loading-logIn').addClass('display-none');\n        this.handleErrorMessages(true, 'logIn-cont', 'Error: The Sever is not responding');\n        console.log(\"ERROR:\" + error);\n      });\n    }\n\n  }\n\n  /*\n   * LogOut function - it reset the sessionID to \" \", and resets the connection with no user credenditials\n   */\n  logOut = () => {\n    this.resetSessionId();\n    this.connect();\n    console.log(\"--- LOGOUT ---\");\n  }\n\n  /*\n   * Handle Error messages\n   */\n  handleErrorMessages = (view, appendTo, message) => {\n    let errorMessage = $(\"<div class='contein_error_message margin-top-15px'><div class='error_message'>\" + message + \"</div></div>\");\n    if (view) {\n      $(\".\" + appendTo).remove(errorMessage);\n      $(\".\" + appendTo).append(errorMessage);\n    }else {\n      $(\".\" + appendTo).hide(errorMessage);\n    }\n  };\n\n\n  render() {\n\n    return (\n\n      <Provider value={{\n        logOut:                this.logOut,\n        loggedIn:              this.state.loggedIn,\n        idCam:                 this.state.idCam,\n        loading:               this.state.loading,\n        connectionError:       this.state.connectionError,\n        apiRestConnectioError: this.state.apiRestConnectioError\n      }}>\n      <BrowserRouter>\n        <Nav />\n\n          <Switch>\n\n            <Route exact path=\"/\"  render={() =>\n              (this.state.connectionError) ? <ConnectionError /> :\n              (this.state.apiRestConnectioError) ?\n              <div className=\"container-cameras-box\">\n                <div className=\"rep_prub_cont\"><img className=\"loading connection_error\" src={ apiNotResponding } alt=\"loading\"/>\n                  <span className=\"message_connection_error api_error\">APi REST server is not responding...</span>\n                </div>\n              </div> :\n              (this.state.loading) ?\n              <div className=\"container-cameras-box\">\n                <div className=\"rep_prub_cont\">\n                  <img className=\"loading connection_error\" src={ loadingSrc } alt=\"loading\"/>\n                </div>\n              </div> :\n              <ContainerVideo />\n            } />\n\n            <Route path=\"/list\" render={() =>\n              (this.state.connectionError) ? <ConnectionError /> :\n              (this.state.apiRestConnectioError) ?\n              <div className=\"container-cameras-box\">\n                <div className=\"rep_prub_cont\"><img className=\"loading connection_error\" src={ apiNotResponding } alt=\"loading\"/>\n                  <span className=\"message_connection_error api_error\">APi REST server is not responding...</span>\n                </div>\n              </div> :\n              (this.state.loading) ?\n              <div className=\"container-cameras-box\">\n                <div className=\"rep_prub_cont\">\n                  <img className=\"loading connection_error\" src={ loadingSrc } alt=\"loading\"/>\n                </div>\n              </div> :\n              <ContainerVideo />\n            } />\n\n\n\n              {\n                (this.state.loggedIn) ?\n                  <div className=\"display-flex-grow\">\n                    <Route path=\"/create\"         render={() => <CreateCamera /> } />\n                    <Route path=\"/update\"         render={() => <UpdateCamera /> } />\n                    <Route path=\"/add\"            render={() => <HandleAddCamera /> } />\n                    <Route path=\"/selectedCamera\" render={() => <HandleUpdateCamera /> } />\n                    <Route path=\"/delete\"         render={() => <HandleDeleteCamera /> } />\n                  </div>\n                : \"\"\n              }\n\n\n\n\n            <Route component={PageNotFound} /> {/*only appears when no route matches*/}\n\n          </Switch>\n\n        </BrowserRouter>\n\n        <div className=\"logIn-cont display-none\">\n          <p className=\"text-logIn\">This LogIn is only for administrators</p>\n          <input type=\"text\" className=\"inputs-logIn userName\" placeholder=\"User\"/>\n          <input type=\"password\" className=\"inputs-logIn password\" placeholder=\"Password\"/>\n          <button onClick={() => { this.checkOnSubmitLogIn() }} className=\"button-form-logIn\">Log In</button>\n\n          <img className=\"loading-logIn display-none\" src={ loadingLogIn } alt=\"loading...\" />\n        </div>\n        <div onClick={() => { this.handleHideLogInArea() }}className=\"logIn-AreaClose display-none\"></div>\n\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}