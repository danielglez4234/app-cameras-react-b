{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgonzalez\\\\Documents\\\\Instalaci\\xF3n conectada\\\\web-cameras\\\\app-cameras-react-b\\\\src\\\\components\\\\HandleAddCamera.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import md5                   from 'md5';\n\nimport loadingSrc from \"../img/loading.svg\";\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_SERVICES_IP\n} = process.env;\nconst cookies = new Cookies();\n\nclass HandleAddCamera extends Component {\n  constructor() {\n    super();\n\n    this.addCamera = () => {\n      const userID = cookies.get('userID');\n      const queryParams = new URLSearchParams(window.location.search);\n      const id = queryParams.get('idCamera');\n      const order = queryParams.get('order');\n      const cameraType = queryParams.get('cameraType');\n      const name = queryParams.get('nameCamera');\n      const description = queryParams.get('descriptionCamera');\n      const panoramic = queryParams.get('select');\n      const interiorGTC = queryParams.get('interiorGTC');\n      const exteriorGTC = queryParams.get('exteriorGTC');\n      const offices = queryParams.get('offices');\n      const dome = queryParams.get('dome');\n      const corridor = queryParams.get('corridor');\n      const others = queryParams.get('others');\n      var setgroup = [];\n\n      if (interiorGTC) {\n        setgroup.push(interiorGTC);\n      }\n\n      if (exteriorGTC) {\n        setgroup.push(exteriorGTC);\n      }\n\n      if (offices) {\n        setgroup.push(offices);\n      }\n\n      if (dome) {\n        setgroup.push(dome);\n      }\n\n      if (corridor) {\n        setgroup.push(corridor);\n      }\n\n      if (others) {\n        setgroup.push(others);\n      } //----------------------------------------------------------------\n\n\n      const recordImagesStatus = queryParams.get('recordImages');\n      var recordStatus;\n\n      if (recordImagesStatus === 'on') {\n        recordStatus = true;\n      } else {\n        recordStatus = false;\n      }\n\n      const processImageStatus = queryParams.get('processImages');\n      var processStatus;\n\n      if (processImageStatus === 'on') {\n        processStatus = true;\n      } else {\n        processStatus = false;\n      } // var urlpath;\n      // const regexhttps         = /^https:\\/\\/+/;\n      // const regexhttp          = /^http:\\/\\/+/;\n\n\n      var url = queryParams.get('urlCamera'); // const credentialsCheck   = queryParams.get('credentialsCheck');\n\n      const user = queryParams.get('userCamera');\n      const pwd = queryParams.get('pwdCamera'); // const encryptPwd = md5(pwd);\n      // var staticOrStream;\n      // if (cameraType === \"Stream\") {\n      //   staticOrStream = \"Camera\"\n      // }else {\n      //   staticOrStream = \"Static\"\n      // }\n\n      const options = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'session-id': userID\n      };\n      console.log(\"-----USERID---->\" + userID);\n      const createBodyEntities = {\n        \"id\": id,\n        \"type\": \"Camera\",\n        \"cameraType\": cameraType,\n        \"order\": order,\n        \"panoramic\": panoramic,\n        \"name\": name,\n        \"group\": setgroup,\n        \"url\": url,\n        \"user\": user,\n        \"password\": pwd,\n        \"kurentoConfig\": {\n          \"recorder\": recordStatus,\n          \"carDetection\": processStatus\n        },\n        \"description\": description\n      };\n      console.log(createBodyEntities);\n      axios.post(`http://${REACT_APP_SERVICES_IP}:8443/cameras`, createBodyEntities, {\n        headers: options\n      }).then(response => {\n        this.setState({\n          //save the current state of the data\n          loadingCreate: false\n        });\n      }).catch(error => {\n        this.setState({\n          //save the current state of the data\n          connectionError: true\n        });\n        console.log('Error fetching and parsing data on the ORION context brocker', error);\n      });\n    };\n\n    this.state = {\n      loadingCreate: true,\n      connectionError: false\n    };\n  }\n\n  componentDidMount() {\n    this.addCamera();\n  }\n\n  render() {\n    const error = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box message-box-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-ban fa-2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 52\n        }, this), \" Internal Server Error\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times fa-2x exit-button \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }, this);\n\n    const success = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box message-box-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check fa-2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Success:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 56\n        }, this), \" Camera created correctly\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times fa-2x exit-button \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }, this); // const success = <p>The camera <b>{this.state.showId}</b> was created successfully.. go to <a href=\"/\">Home</a></p>\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rep_prub_form\",\n      children: this.state.connectionError ? error : this.state.loadingCreate ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading connection_error\",\n        src: loadingSrc,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 38\n      }, this) : success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HandleAddCamera;","map":{"version":3,"sources":["C:/Users/dgonzalez/Documents/Instalaci√≥n conectada/web-cameras/app-cameras-react-b/src/components/HandleAddCamera.js"],"names":["React","Component","axios","Cookies","REACT_APP_SERVICES_IP","process","env","cookies","HandleAddCamera","constructor","addCamera","userID","get","queryParams","URLSearchParams","window","location","search","id","order","cameraType","name","description","panoramic","interiorGTC","exteriorGTC","offices","dome","corridor","others","setgroup","push","recordImagesStatus","recordStatus","processImageStatus","processStatus","url","user","pwd","options","console","log","createBodyEntities","post","headers","then","response","setState","loadingCreate","catch","error","connectionError","state","componentDidMount","render","success","loadingSrc"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport axios                 from 'axios';\n// import md5                   from 'md5';\n\nimport loadingSrc            from '../img/loading.svg';\nimport Cookies               from 'universal-cookie';\n\nconst {REACT_APP_SERVICES_IP} = process.env;\nconst cookies = new Cookies();\n\nclass HandleAddCamera extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      loadingCreate: true,\n      connectionError: false\n    };\n  }\n\n\n  addCamera = () => {\n    const userID      = cookies.get('userID');\n    const queryParams = new URLSearchParams(window.location.search);\n    const id          = queryParams.get('idCamera');\n    const order       = queryParams.get('order');\n    const cameraType  = queryParams.get('cameraType');\n    const name        = queryParams.get('nameCamera');\n    const description = queryParams.get('descriptionCamera');\n    const panoramic   = queryParams.get('select');\n\n\n    const interiorGTC = queryParams.get('interiorGTC');\n    const exteriorGTC = queryParams.get('exteriorGTC');\n    const offices     = queryParams.get('offices');\n    const dome        = queryParams.get('dome');\n    const corridor    = queryParams.get('corridor');\n    const others      = queryParams.get('others');\n\n    var setgroup      = [];\n    if (interiorGTC)  {setgroup.push(interiorGTC);}\n    if (exteriorGTC)  {setgroup.push(exteriorGTC);}\n    if (offices)      {setgroup.push(offices);}\n    if (dome)         {setgroup.push(dome);}\n    if (corridor)     {setgroup.push(corridor);}\n    if (others)       {setgroup.push(others);}\n\n\n    //----------------------------------------------------------------\n\n    const recordImagesStatus = queryParams.get('recordImages');\n    var recordStatus;\n      if (recordImagesStatus === 'on') {\n        recordStatus         = true;\n      }else {\n        recordStatus         = false;\n      }\n\n    const processImageStatus = queryParams.get('processImages');\n    var processStatus;\n      if (processImageStatus === 'on') {\n        processStatus        = true;\n      }else {\n        processStatus        = false;\n      }\n\n\n    // var urlpath;\n    // const regexhttps         = /^https:\\/\\/+/;\n    // const regexhttp          = /^http:\\/\\/+/;\n\n    var url                  = queryParams.get('urlCamera');\n    // const credentialsCheck   = queryParams.get('credentialsCheck');\n\n    const user             = queryParams.get('userCamera');\n    const pwd              = queryParams.get('pwdCamera');\n          // const encryptPwd = md5(pwd);\n    // var staticOrStream;\n    // if (cameraType === \"Stream\") {\n    //   staticOrStream = \"Camera\"\n    // }else {\n    //   staticOrStream = \"Static\"\n    // }\n\n    const options = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'session-id': userID\n    };\n\n    console.log(\"-----USERID---->\" + userID);\n\n    const createBodyEntities = {\n      \"id\": id,\n      \"type\": \"Camera\",\n      \"cameraType\": cameraType,\n      \"order\": order,\n      \"panoramic\": panoramic,\n      \"name\": name,\n      \"group\": setgroup,\n      \"url\": url,\n      \"user\": user,\n      \"password\": pwd,\n      \"kurentoConfig\": {\n        \"recorder\": recordStatus,\n        \"carDetection\": processStatus\n      },\n      \"description\": description\n    };\n\n    console.log(createBodyEntities);\n\n    axios.post(`http://${REACT_APP_SERVICES_IP}:8443/cameras`, createBodyEntities, { headers: options\t})\n      .then(response => {\n        this.setState({ //save the current state of the data\n          loadingCreate: false\n        });\n      })\n      .catch(error => {\n\n        this.setState({ //save the current state of the data\n          connectionError: true\n        });\n        console.log('Error fetching and parsing data on the ORION context brocker', error);\n      });\n  }\n\n\n  componentDidMount() {\n    this.addCamera();\n  }\n\n  render() {\n    const error = <div className=\"message-box message-box-error\">\n                    <i className=\"fa fa-ban fa-2x\"></i>\n                    <span className=\"message-text\"><strong>Error:</strong> Internal Server Error</span>\n                    <a href=\"/\">\n                      <i className=\"fa fa-times fa-2x exit-button \"></i>\n                    </a>\n                  </div>;\n    const success = <div className=\"message-box message-box-success\">\n                        <i className=\"fa fa-check fa-2x\"></i>\n                        <span className=\"message-text\"><strong>Success:</strong> Camera created correctly</span>\n                        <a href=\"/\">\n                          <i className=\"fa fa-times fa-2x exit-button \"></i>\n                        </a>\n                      </div>;\n    // const success = <p>The camera <b>{this.state.showId}</b> was created successfully.. go to <a href=\"/\">Home</a></p>\n    return (\n      <div className=\"rep_prub_form\">\n\n      { (this.state.connectionError) ? error :\n        (this.state.loadingCreate) ? <img className=\"loading connection_error\" src={ loadingSrc } alt=\"loading\"/> : success }\n      </div>\n    );\n  }\n}\n\nexport default HandleAddCamera;\n"]},"metadata":{},"sourceType":"module"}